# Dockerfile.simple - シンプル最適化版
# Phase 12.2修正 + 軽量化（既存requirements活用・確実ビルド）

FROM python:3.11-slim-bullseye

WORKDIR /app

# システムパッケージ最小化インストール
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl ca-certificates build-essential git \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Python依存関係ファイルをコピー・フィルタリング
COPY requirements-dev.txt ./requirements-dev.txt

# 本番用依存関係を生成（開発・テスト用パッケージを除外）
RUN grep -v -E "^(pytest|flake8|black|isort|mypy|bandit|coverage|sphinx|jupyter|notebook)" requirements-dev.txt > requirements.txt

# 本番用依存関係をインストール
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt && \
    rm -rf ~/.cache/pip

# アプリケーションコードをコピー（Phase 12.2修正済み）
COPY crypto_bot/ /app/crypto_bot/
COPY config/ /app/config/
COPY models/production/ /app/models/production/
COPY config/core/feature_order.json /app/feature_order.json
COPY docker/docker-entrypoint.sh /app/
RUN chmod +x /app/docker-entrypoint.sh

# 環境変数設定
ENV PORT=8080
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app
ENV FEATURE_MODE=full

EXPOSE 8080

# 軽量ヘルスチェック
HEALTHCHECK --interval=30s --timeout=5s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

CMD ["/app/docker-entrypoint.sh"]