# Ingress for GKE with Google Cloud Load Balancer
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: crypto-bot-ingress-gke
  namespace: crypto-bot
  labels:
    app: crypto-bot
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "crypto-bot-ip"
    networking.gke.io/managed-certificates: "crypto-bot-ssl-cert"
    kubernetes.io/ingress.allow-http: "true"
spec:
  rules:
  - host: crypto-bot.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: crypto-bot-service
            port:
              number: 80
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: crypto-bot-service
            port:
              number: 8080

---
# Managed Certificate for GKE
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: crypto-bot-ssl-cert
  namespace: crypto-bot
spec:
  domains:
    - crypto-bot.example.com

---
# ALB Ingress for EKS
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: crypto-bot-ingress-eks
  namespace: crypto-bot
  labels:
    app: crypto-bot
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:region:account:certificate/cert-id
    alb.ingress.kubernetes.io/healthcheck-path: /healthz
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '10'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
spec:
  rules:
  - host: crypto-bot-eks.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: crypto-bot-service
            port:
              number: 80
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: crypto-bot-service
            port:
              number: 8080

---
# NGINX Ingress (alternative for both GKE and EKS)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: crypto-bot-ingress-nginx
  namespace: crypto-bot
  labels:
    app: crypto-bot
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - crypto-bot.example.com
    secretName: crypto-bot-tls
  rules:
  - host: crypto-bot.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: crypto-bot-service
            port:
              number: 80
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: crypto-bot-service
            port:
              number: 8080