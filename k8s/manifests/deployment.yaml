apiVersion: apps/v1
kind: Deployment
metadata:
  name: crypto-bot
  namespace: crypto-bot
  labels:
    app: crypto-bot
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: crypto-bot
  template:
    metadata:
      labels:
        app: crypto-bot
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: crypto-bot
      
      # Security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      
      containers:
      - name: crypto-bot
        image: ghcr.io/nao-namake/crypto-bot:latest
        imagePullPolicy: Always
        
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        # Resource limits
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "1000m"
        
        # Environment variables from ConfigMap
        envFrom:
        - configMapRef:
            name: crypto-bot-config
        
        # Environment variables from Secrets
        env:
        - name: BYBIT_TESTNET_API_KEY
          valueFrom:
            secretKeyRef:
              name: crypto-bot-secrets
              key: BYBIT_TESTNET_API_KEY
        - name: BYBIT_TESTNET_API_SECRET
          valueFrom:
            secretKeyRef:
              name: crypto-bot-secrets
              key: BYBIT_TESTNET_API_SECRET
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/etc/gcp/credentials.json"
        
        # Ports
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: metrics
          containerPort: 8080
          protocol: TCP
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        startupProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 12
          successThreshold: 1
        
        # Volume mounts
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: gcp-credentials
          mountPath: /etc/gcp
          readOnly: true
        - name: model-storage
          mountPath: /app/model
          readOnly: true
        - name: config-storage
          mountPath: /app/config
          readOnly: true
      
      # Volumes
      volumes:
      - name: tmp
        emptyDir: {}
      - name: gcp-credentials
        secret:
          secretName: crypto-bot-secrets
          items:
          - key: GOOGLE_APPLICATION_CREDENTIALS_JSON
            path: credentials.json
      - name: model-storage
        emptyDir: {}
      - name: config-storage
        configMap:
          name: crypto-bot-config
          items:
          - key: DEFAULT_CONFIG
            path: default.yml
      
      # Node selection
      nodeSelector:
        kubernetes.io/os: linux
      
      # Tolerations for spot instances
      tolerations:
      - key: "node.kubernetes.io/spot"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      
      # Anti-affinity to spread across nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - crypto-bot
              topologyKey: kubernetes.io/hostname

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crypto-bot-dev
  namespace: crypto-bot-dev
  labels:
    app: crypto-bot
    environment: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crypto-bot
      environment: dev
  template:
    metadata:
      labels:
        app: crypto-bot
        environment: dev
    spec:
      serviceAccountName: crypto-bot-dev
      containers:
      - name: crypto-bot
        image: ghcr.io/nao-namake/crypto-bot:latest
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        envFrom:
        - configMapRef:
            name: crypto-bot-config-dev
        env:
        - name: BYBIT_TESTNET_API_KEY
          valueFrom:
            secretKeyRef:
              name: crypto-bot-secrets-dev
              key: BYBIT_TESTNET_API_KEY
        - name: BYBIT_TESTNET_API_SECRET
          valueFrom:
            secretKeyRef:
              name: crypto-bot-secrets-dev
              key: BYBIT_TESTNET_API_SECRET
        ports:
        - containerPort: 8000
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 10

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crypto-bot-prod
  namespace: crypto-bot-prod
  labels:
    app: crypto-bot
    environment: prod
spec:
  replicas: 3
  selector:
    matchLabels:
      app: crypto-bot
      environment: prod
  template:
    metadata:
      labels:
        app: crypto-bot
        environment: prod
    spec:
      serviceAccountName: crypto-bot-prod
      containers:
      - name: crypto-bot
        image: ghcr.io/nao-namake/crypto-bot:latest
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "2000m"
        envFrom:
        - configMapRef:
            name: crypto-bot-config-prod
        env:
        - name: BYBIT_LIVE_API_KEY
          valueFrom:
            secretKeyRef:
              name: crypto-bot-secrets-prod
              key: BYBIT_LIVE_API_KEY
        - name: BYBIT_LIVE_API_SECRET
          valueFrom:
            secretKeyRef:
              name: crypto-bot-secrets-prod
              key: BYBIT_LIVE_API_SECRET
        ports:
        - containerPort: 8000
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 120
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 20