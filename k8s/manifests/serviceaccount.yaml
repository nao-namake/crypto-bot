apiVersion: v1
kind: ServiceAccount
metadata:
  name: crypto-bot
  namespace: crypto-bot
  labels:
    app: crypto-bot
  annotations:
    # GKE Workload Identity
    iam.gke.io/gcp-service-account: crypto-bot-gke@PROJECT_ID.iam.gserviceaccount.com
    # EKS IAM Role
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/crypto-bot-eks-role

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: crypto-bot-dev
  namespace: crypto-bot-dev
  labels:
    app: crypto-bot
    environment: dev
  annotations:
    iam.gke.io/gcp-service-account: crypto-bot-dev-gke@PROJECT_ID.iam.gserviceaccount.com
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/crypto-bot-dev-eks-role

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: crypto-bot-prod
  namespace: crypto-bot-prod
  labels:
    app: crypto-bot
    environment: prod
  annotations:
    iam.gke.io/gcp-service-account: crypto-bot-prod-gke@PROJECT_ID.iam.gserviceaccount.com
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/crypto-bot-prod-eks-role

---
# ClusterRole for crypto-bot operations
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: crypto-bot-role
rules:
# Read-only access to cluster information for health checks
- apiGroups: [""]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]
# Access to own ConfigMaps and Secrets
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list"]
  resourceNames: ["crypto-bot-config", "crypto-bot-secrets"]

---
# ClusterRoleBinding for default namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: crypto-bot-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crypto-bot-role
subjects:
- kind: ServiceAccount
  name: crypto-bot
  namespace: crypto-bot

---
# ClusterRoleBinding for dev namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: crypto-bot-dev-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crypto-bot-role
subjects:
- kind: ServiceAccount
  name: crypto-bot-dev
  namespace: crypto-bot-dev

---
# ClusterRoleBinding for prod namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: crypto-bot-prod-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crypto-bot-role
subjects:
- kind: ServiceAccount
  name: crypto-bot-prod
  namespace: crypto-bot-prod