{
  "version": "1.0.0",
  "description": "crypto-bot 完璧稼働状況確認システム設定",
  "updated": "2025-08-12",
  
  "check_phases": {
    "phase1": {
      "name": "インフラ・基盤確認",
      "weight": 25,
      "checks": [
        "gcp_cloud_run_status",
        "api_connectivity", 
        "system_health",
        "resource_usage"
      ]
    },
    "phase2": {
      "name": "アプリケーション動作確認", 
      "weight": 30,
      "checks": [
        "log_analysis",
        "data_fetching_efficiency",
        "signal_generation_health",
        "main_loop_status"
      ]
    },
    "phase3": {
      "name": "隠れた問題検出",
      "weight": 30,
      "checks": [
        "hidden_error_patterns",
        "performance_anomalies", 
        "future_data_leaks",
        "config_integrity"
      ]
    },
    "phase4": {
      "name": "総合判定・レポート",
      "weight": 15,
      "checks": [
        "overall_scoring",
        "risk_assessment",
        "action_recommendations",
        "report_generation"
      ]
    }
  },

  "thresholds": {
    "critical_score": 70,
    "warning_score": 85,
    "healthy_score": 95,
    
    "max_response_time_seconds": 5.0,
    "max_silence_hours": 1.0,
    "max_consecutive_holds": 30,
    "min_confidence": 0.1,
    "max_confidence": 0.9,
    
    "max_empty_batch_ratio": 0.5,
    "max_data_fetch_attempts": 15,
    "max_api_error_rate": 0.1,
    "max_memory_usage_percent": 90
  },

  "hidden_error_patterns": {
    "description": "過去に発生した見つけにくいエラーパターン",
    "patterns": [
      {
        "id": "data_fetch_stagnation",
        "name": "データ取得停滞（48/300問題）", 
        "severity": "CRITICAL",
        "detection": {
          "log_patterns": [
            "current=48/300",
            "⚠️ Empty batch [0-9]+/8",
            "🔄 Attempt [1-9][0-9]+/20.*current=48/300"
          ],
          "conditions": [
            "empty_batch_count >= 8",
            "fetch_progress_stalled >= 1800" 
          ]
        },
        "description": "API制限または接続問題により48件で停滞、Empty batch連続発生",
        "past_solutions": [
          "API接続確認・認証情報チェック",
          "レート制限回避・バックオフ調整",
          "データキャッシュ機能実装"
        ]
      },
      {
        "id": "ci_workflow_stuck", 
        "name": "CI/CDワークフロー長時間スタック",
        "severity": "HIGH",
        "detection": {
          "github_patterns": [
            "in_progress.*[5-9] hour",
            "Run quality checks.*in_progress.*>3600"
          ],
          "conditions": [
            "ci_duration_seconds > 3600",
            "ci_status == 'in_progress'"
          ]
        },
        "description": "GitHub Actionsが数時間スタック、新デプロイ未実行",
        "past_solutions": [
          "スタックCIのキャンセル・再実行",
          "テスト環境でのローカル検証",
          "CI/CDタイムアウト設定の見直し"
        ]
      },
      {
        "id": "surface_healthy_actually_stopped",
        "name": "表面稼働・実際停止問題",
        "severity": "CRITICAL", 
        "detection": {
          "health_patterns": [
            "status.*healthy.*timestamp.*[5-9] hour"
          ],
          "conditions": [
            "health_timestamp_age_hours >= 4",
            "latest_log_age_hours >= 2",
            "no_recent_activity == true"
          ]
        },
        "description": "ヘルスチェックは200だが、実際は数時間前から停止",
        "past_solutions": [
          "Cloud Run強制再起動",
          "リビジョン切替確認", 
          "アプリケーションレベル診断"
        ]
      },
      {
        "id": "timezone_confusion",
        "name": "UTC/JST時刻混在による状況誤認",
        "severity": "MEDIUM",
        "detection": {
          "patterns": [
            "mixed_timezone_display",
            "time_interpretation_error"
          ],
          "conditions": [
            "timezone_consistency_check == false"
          ]
        },
        "description": "UTC・JST時刻混在により状況判断を誤る",
        "past_solutions": [
          "全時刻表示をJST統一",
          "統合時刻管理ツール使用",
          "時刻変換自動化"
        ]
      },
      {
        "id": "import_error_hidden",
        "name": "隠れたインポート・メソッド不在エラー",
        "severity": "HIGH",
        "detection": {
          "log_patterns": [
            "ImportError.*BitbankCoreExecutor",
            "AttributeError.*fetch_ticker",
            "cannot import name.*from"
          ],
          "test_patterns": [
            "test.*failed.*import",
            "ModuleNotFoundError"
          ]
        },
        "description": "テスト実行時やランタイムで発覚するインポート・メソッドエラー",
        "past_solutions": [
          "不足クラス・メソッドの実装",
          "インポートパス修正",
          "型定義統合"
        ]
      },
      {
        "id": "main_loop_not_reached",
        "name": "初期化段階での停止（メインループ未到達）",
        "severity": "CRITICAL",
        "detection": {
          "log_patterns": [
            "INIT-[1-5].*で停止",
            "ATR calculation.*完了後停止"
          ],
          "conditions": [
            "main_loop_entries == 0",
            "init_phase_stuck >= 1800"
          ]
        },
        "description": "INIT段階で停止、メインループに到達しない",
        "past_solutions": [
          "初期化処理の簡素化",
          "INIT段階エラーハンドリング強化",
          "タイムアウト設定適正化"
        ]
      },
      {
        "id": "revision_switch_failure",
        "name": "リビジョン切替失敗・古バージョン稼働",
        "severity": "HIGH",
        "detection": {
          "gcp_patterns": [
            "新リビジョン作成.*トラフィック0%",
            "ACTIVE.*古い作成時刻"
          ],
          "conditions": [
            "active_revision_age_hours >= 24",
            "latest_revision_traffic_percent < 50"
          ]
        },
        "description": "新リビジョン作成されるが、古いバージョンがACTIVE継続",
        "past_solutions": [
          "トラフィック手動切替",
          "古リビジョン削除・クリーンアップ",
          "デプロイプロセス見直し"
        ]
      },
      {
        "id": "infinite_retry_loop",
        "name": "無限リトライループ・タイムスタンプ異常",
        "severity": "HIGH",
        "detection": {
          "log_patterns": [
            "🔄 Attempt [1-9][0-9]+/20",
            "Smart backoff.*[3-9][0-9]\\.[0-9]+s"
          ],
          "conditions": [
            "retry_attempts >= 15",
            "backoff_duration_seconds >= 30"
          ]
        },
        "description": "リトライ回数異常増加、バックオフ時間延長",
        "past_solutions": [
          "リトライロジック見直し",
          "タイムスタンプ検証強化",
          "異常検出・早期脱出実装"
        ]
      },
      {
        "id": "model_prediction_anomaly",
        "name": "予測値異常（confidence固定・異常値）",
        "severity": "MEDIUM",
        "detection": {
          "signal_patterns": [
            "confidence.*0\\.0{3,}",
            "confidence.*1\\.0{3,}",
            "連続[3-9][0-9].*HOLD"
          ],
          "conditions": [
            "confidence_variance < 0.01",
            "consecutive_holds >= 30"
          ]
        },
        "description": "予測confidenceが固定値・モデル予測異常",
        "past_solutions": [
          "モデル再学習・検証",
          "特徴量整合性チェック",
          "予測パイプライン診断"
        ]
      },
      {
        "id": "memory_leak_gradual",
        "name": "緩やかなメモリリーク・パフォーマンス劣化",
        "severity": "MEDIUM",
        "detection": {
          "resource_patterns": [
            "memory.*usage.*increasing",
            "response.*time.*degradation"
          ],
          "conditions": [
            "memory_growth_rate_mb_per_hour >= 10",
            "response_time_trend_increasing == true"
          ]
        },
        "description": "時間とともにメモリ使用量増加、レスポンス劣化",
        "past_solutions": [
          "メモリプロファイリング実行",
          "キャッシュクリーンアップ実装", 
          "インスタンス定期再起動"
        ]
      },
      {
        "id": "model_compatibility_error",
        "name": "モデル互換性エラー（monotonic_cst属性）",
        "severity": "CRITICAL",
        "detection": {
          "log_patterns": [
            "DecisionTreeClassifier.*has no attribute.*monotonic_cst",
            "Trading prediction failed for base model",
            "sklearn.*version.*mismatch"
          ],
          "conditions": [
            "model_prediction_failures >= 1",
            "no_trade_signals_generated == true"
          ]
        },
        "description": "scikit-learnバージョン不整合によるモデル予測失敗、トレード不能",
        "past_solutions": [
          "scripts/model_tools/retrain_97_features_model.py --fix-compatibility-only実行",
          "モデル再学習でバージョン統一",
          "crypto_bot/ml/ensemble.pyにパッチ適用"
        ]
      },
      {
        "id": "frequent_instance_restart",
        "name": "頻繁なインスタンス再起動（SIGTERM）",
        "severity": "HIGH",
        "detection": {
          "log_patterns": [
            "Received signal 15",
            "SIGTERM",
            "Shutting down gracefully",
            "Shutting down user disabled instance"
          ],
          "conditions": [
            "restart_frequency_per_hour >= 1",
            "min_instances_setting == 0"
          ]
        },
        "description": "Cloud Runのmin-instances=0によるアイドルタイムアウト、状態リセット",
        "past_solutions": [
          "gcloud run services update --min-instances=1",
          "CPU throttling無効化",
          "タイムアウト延長（--timeout=3600）"
        ]
      },
      {
        "id": "confidence_below_threshold_chronic",
        "name": "confidence値慢性的閾値未達",
        "severity": "MEDIUM",
        "detection": {
          "log_patterns": [
            "confidence=0\\.[0-2][0-9][0-9][0-9], threshold=0\\.[3-9]",
            "Entry order details: side=None, price=None, lot=0\\.0"
          ],
          "conditions": [
            "avg_confidence_last_10 < threshold",
            "no_entry_signals_hours >= 2"
          ]
        },
        "description": "予測confidenceが常に閾値を下回り、エントリーシグナル生成されず",
        "past_solutions": [
          "confidence_threshold引き下げ（0.35→0.25）",
          "モデル性能改善・再学習",
          "データ品質向上・取得量増加"
        ]
      },
      {
        "id": "data_fetch_insufficient_volume",
        "name": "データ取得量不足（50%未満）",
        "severity": "HIGH",
        "detection": {
          "log_patterns": [
            "current=[0-9]{1,2}/150",
            "current=1[0-2][0-9]/150"
          ],
          "conditions": [
            "data_fetch_completion_rate < 0.5",
            "data_fetch_attempts >= 10"
          ]
        },
        "description": "目標データ量の50%未満しか取得できず、予測精度に悪影響",
        "past_solutions": [
          "API制限設定緩和（rateLimit引き下げ）",
          "max_consecutive_empty上限拡大",
          "backoff時間延長・リトライ増加"
        ]
      },
      {
        "id": "ensemble_model_degraded",
        "name": "アンサンブルモデル劣化（フォールバック多用）",
        "severity": "MEDIUM",
        "detection": {
          "log_patterns": [
            "Base model [0-9] failed \\(using fallback\\)",
            "Trading prediction failed for base model"
          ],
          "conditions": [
            "model_fallback_rate > 0.3",
            "base_model_failures >= 5"
          ]
        },
        "description": "アンサンブル内の複数モデルが失敗、予測品質低下",
        "past_solutions": [
          "モデル互換性修正・再学習",
          "sklearn version統一",
          "ensemble.py パッチ強化"
        ]
      }
    ]
  },

  "detection_rules": {
    "data_quality": {
      "empty_batch_threshold": 5,
      "stalled_progress_seconds": 1800,
      "api_error_rate_threshold": 0.2
    },
    "system_health": {
      "max_memory_usage": 0.9,
      "max_cpu_usage": 0.8,
      "max_response_time": 10.0,
      "min_uptime_hours": 1.0
    },
    "trading_signals": {
      "max_silence_hours": 2.0,
      "min_signal_diversity": 0.1,
      "confidence_range": [0.05, 0.95],
      "max_consecutive_same": 50
    }
  },

  "reporting": {
    "output_formats": ["console", "html", "json"],
    "timezone": "Asia/Tokyo",
    "score_weights": {
      "infrastructure": 0.25,
      "application": 0.30, 
      "hidden_issues": 0.30,
      "overall_health": 0.15
    },
    "action_priority_levels": ["IMMEDIATE", "HIGH", "MEDIUM", "LOW", "INFO"]
  },

  "integration": {
    "existing_tools": {
      "signal_monitor": "scripts/monitoring/signal_monitor.py",
      "error_analyzer": "scripts/monitoring/error_analyzer.py", 
      "system_health": "scripts/system_tools/system_health_check.py",
      "leak_detector": "scripts/monitoring/future_leak_detector.py",
      "gcp_log_viewer": "scripts/utilities/unified_status_checker.py"
    },
    "log_sources": {
      "gcp_logs": "gcloud logging read",
      "local_logs": "logs/",
      "signal_csv": "logs/trading_signals.csv",
      "health_endpoint": "/health"
    }
  }
}