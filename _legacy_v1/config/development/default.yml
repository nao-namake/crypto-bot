# =============================================================================
# ファイル名: config/default.yml
# 説明:
# Crypto-Bot 全体設定ファイル（データ取得・戦略・ML・リスク・バックテストなど）
# - 取引ペア・期間・MLモデル・リスクパラメータ等の主要設定を一元管理
# - extra_featuresに追加したいテクニカル指標を記載することで柔軟に特徴量拡張が可能
# =============================================================================

# ----------------------------------------------------------------------
# データ取得設定
# ----------------------------------------------------------------------
data:
  # ============== Bybit設定 - 本番に影響しないようコメントアウト ==============
  # exchange: bybit
  # symbol: BTC/USDT
  # timeframe: 1h
  
  # ------ Bybit Testnet オプション（非アクティブ） ------
  # api_key: ${BYBIT_TESTNET_API_KEY}    # .env から読み込み
  # api_secret: ${BYBIT_TESTNET_API_SECRET}  # .env から読み込み
  # ccxt_options:
  #   defaultType: linear
  #   enableRateLimit: true
  #   urls:
  #     api: https://api-testnet.bybit.com
  # -------------------------------------------------------
  # ========================================================================
  
  # デフォルト設定をBitbankに変更
  exchange: bitbank
  symbol: BTC/JPY
  timeframe: 1h
  
  # ------ Bitbank 本番オプション ------
  api_key: ${BITBANK_API_KEY}
  api_secret: ${BITBANK_API_SECRET}
  ccxt_options:
    enableRateLimit: true
    rateLimit: 1000  # Bitbank API制限対応
  # ------------------------------------

  # データ取得範囲（48時間動的計算に変更）
  # since設定削除 - 動的計算でリアルタイムデータ取得
  limit: 20000          # 20000 本 ≒ 2 年弱（1h足）
  paginate: true
  per_page: 500

# ----------------------------------------------------------------------
# 戦略設定 ―― MLStrategy
# ----------------------------------------------------------------------
strategy:
  type: single  # single または multi
  name: ml
  params:
    model_path: model.pkl
    threshold: 0.05  # ベース閾値（動的調整の基準点）
    
    # 動的閾値調整パラメータ
    atr_multiplier: 0.5  # ATR調整の倍数（0.3-0.8推奨）
    volatility_adjustment: true  # ボラティリティ調整の有効/無効
    threshold_bounds: [0.01, 0.25]  # 閾値の最小・最大値
    
    thresholds_to_test:
      - 0.02  # より積極的な範囲に変更
      - 0.05
      - 0.08
      - 0.10
      - 0.15
      - 0.20
      - 0.30

# ----------------------------------------------------------------------
# リスク管理
# ----------------------------------------------------------------------
risk:
  risk_per_trade: 0.02  # 0.01 → 0.02 に増加（テストネットなのでリスク許容）
  stop_atr_mult: 1.5   # 2.0 → 1.5 に短縮（早めの損切り）
  dynamic_position_sizing:
    enabled: true
    formula: linear
  
  # Kelly基準によるポジションサイジング
  kelly_criterion:
    enabled: false  # Kelly基準を使用するかどうか
    lookback_window: 50  # 過去何トレードを参考にするか
    max_fraction: 0.25  # Kelly基準の最大割合（25%まで）
    min_trades_required: 10  # Kelly計算に必要な最小トレード数

# ----------------------------------------------------------------------
# バックテスト
# ----------------------------------------------------------------------
backtest:
  starting_balance: 10000.0
  slippage_rate: 0.001
  trade_log_csv: "./results/trade_log.csv"
  aggregate_out_prefix: "./results/aggregate"

# ----------------------------------------------------------------------
# パラメータ最適化（テクニカル用/未使用可）
# ----------------------------------------------------------------------
optimizer:
  periods: []
  nbdevs:  []
  parallel: false
  max_workers: 1

# ----------------------------------------------------------------------
# ウォークフォワード分割
# ----------------------------------------------------------------------
walk_forward:
  train_window: 1500     # 1500本 ≒ 2か月
  test_window: 250       # 250本 ≒ 10日
  step: 250              # テスト窓ごとにスライド

# ----------------------------------------------------------------------
# 機械学習（ML）設定
# ----------------------------------------------------------------------
ml:
  feat_period: 14                 # ATR等で使う期間
  lags: [1,2,3,4,5,6,7,8,9,10,11,12]
  rolling_window: 20
  horizon: 5                      # 何足先をターゲットにするか
  target_type: classification
  model_type: lgbm                # lgbm/rf/xgb/ensemble
  
  # VIX恐怖指数統合設定
  vix_integration:
    enabled: true                 # VIX統合を有効化
    risk_off_threshold: 25        # リスクオフ判定閾値
    panic_threshold: 35           # パニック判定閾値
    spike_multiplier: 2.0         # VIXスパイク倍率
  
  # 性能向上設定
  performance_enhancements:
    confidence_filter: 0.65       # 信頼度フィルター（65%以上）
    partial_profit_levels: [0.3, 0.5]  # 段階的利確レベル（30%/50%）
    trailing_stop: true           # トレーリングストップ有効

  # アンサンブルモデル設定（model_type: ensemble の場合）
  ensemble:
    enabled: false  # アンサンブルモデルを使用するかどうか
    method: stacking  # voting/weighted/stacking
    weights: null  # weighted の場合の重み [0.4, 0.3, 0.3] など
    
    # ベースモデル設定
    base_models:
      - type: lgbm
        n_estimators: 89
        max_depth: 9
        learning_rate: 0.09558059446177633
        bagging_fraction: 0.6
        lambda_l1: 1.0
        lambda_l2: 0.5
      - type: rf
        n_estimators: 100
        max_depth: 8
        min_samples_split: 5
        min_samples_leaf: 2
      - type: xgb
        n_estimators: 100
        max_depth: 7
        learning_rate: 0.1
        subsample: 0.8
        colsample_bytree: 0.8
    
    # メタモデル設定（stacking の場合）
    meta_model:
      type: lr  # lr/lgbm/rf/xgb
      C: 1.0  # LogisticRegression の場合
      max_iter: 1000

  # ==========================
  # 勝率向上のための拡張特徴量セット
  # 
  # 基本テクニカル指標:
  # - rsi_14      : RSI(14)
  # - macd        : MACD（ライン、シグナル、ヒストグラム）
  # - rci_9       : RCI(9)
  # - sma_200, ema_50 : 移動平均
  # 
  # 新追加の高度指標:
  # - stoch       : ストキャスティクス（%K, %D）
  # - bb          : ボリンジャーバンド（上限、下限、%B、幅）
  # - willr_14    : Williams %R(14)
  # - adx         : ADX、+DI、-DI（トレンド強度）
  # - cmf_20      : チャイキンマネーフロー(20)
  # - fisher      : フィッシャートランスフォーム
  # - advanced_signals : 複合シグナル
  # 
  # マクロ系特徴量（新実装）:
  # - dxy         : DXY・米国債金利関連特徴量（10個）
  # - funding     : Funding Rate・OI関連特徴量（9個）
  # - sentiment   : ニュース感情分析特徴量（8個）
  # 
  # OI・出来高・時間特徴量:
  # - oi          : 未決済建玉関連特徴量
  # - volume_zscore : 出来高のZスコア
  # - day_of_week : 曜日（0=月, 6=日）
  # - hour_of_day : 時間（0〜23）
  # 
  # もちぽよシグナル:
  # - mochipoyo_long_signal, mochipoyo_short_signal
  # ==========================
  extra_features:
    # === 高効果基本指標（6個） ===
    - rsi_14      # 最重要モメンタム
    - macd        # 最重要トレンド転換
    - rci_9       # 効果的逆張り
    - volume_zscore  # 重要出来高分析
    - sma_200     # 長期トレンド
    - ema_50      # 中期トレンド
    
    # === 効果的高度指標（6個） ===
    - stoch       # オシレータ
    - bb          # ボラティリティ
    - adx         # トレンド強度
    - willr       # 短期オシレータ
    - cmf         # 資金フロー
    - fisher      # 転換点検知
    
    # === マクロ経済統合（35個） ===
    - vix         # VIX恐怖指数（6特徴量）
    - dxy         # DXY・金利（10特徴量）
    - fear_greed  # Fear&Greed（12特徴量）
    - funding     # Funding Rate・OI（7特徴量）
    
    # === 時間・シグナル特徴量（4個） ===
    - day_of_week
    - hour_of_day
    - mochipoyo_long_signal
    - mochipoyo_short_signal
    
    # === 追加移動平均（8個） ===
    - sma_50
    - sma_100
    - ema_12
    - ema_26
    - sma_20
    - ema_20
    - sma_10
    - ema_10

  # Optuna（ハイパーパラ最適化）設定
  optuna:
    n_trials: 10  # より高速なテストのため短縮
    timeout: 300
    direction: maximize
    sampler:
      name: TPESampler
    pruner:
      name: MedianPruner
      n_startup_trials: 5
      n_warmup_steps: 10
      interval_steps: 1

  # 初期モデルパラメータ
  model_params:
    n_estimators: 89
    max_depth: 9
    learning_rate: 0.09558059446177633
    bagging_fraction: 0.6      # ←ここだけ
    lambda_l1: 1.0             # ←ここだけ
    lambda_l2: 0.5             # ←ここだけ
    # reg_alpha, reg_lambda, subsample, などは削除!!

  # ハイパーパラメータ探索範囲
  model_params_search_space:
    max_depth:        [3,6,9,12,15]
    learning_rate:    [0.001,0.01,0.05,0.1]
    feature_fraction: [0.6,0.8,1.0]
    bagging_fraction: [0.6,0.8,1.0]
    lambda_l1:        [0.0,0.1,0.5,1.0]
    lambda_l2:        [0.0,0.1,0.5,1.0]
    # reg_alpha, reg_lambda, subsample, などは削除!!

  # モデルキャリブレーション設定
  calibration:
    method: sigmoid
    cv: prefit