# ========================================
# Phase 16-B完了: 閾値設定システム
# ========================================
# 
# 運用時調整可能な閾値・数値パラメータ管理
# base.yamlと重複しない動的設定値のみ定義
# ========================================

# ML関連動的閾値（base.yamlと重複しない設定のみ）
ml:
  # フォールバック・エラーハンドリング
  default_confidence: 0.5           # ダミーモデル・フォールバック時の信頼度
  prediction_fallback_confidence: 0.0  # 予測失敗時のフォールバック信頼度
  emergency_stop_on_dummy: true     # ダミーモデル時の緊急停止
  allow_dummy_fallback: false       # ダミーフォールバック許可（安全性重視）
  max_model_failures: 3            # モデル失敗上限（この回数で停止）

# データ取得・処理関連閾値
data:
  # タイムフレーム別データ取得件数（テクニカル指標計算最適化）
  fetch_limits:
    "15m": 100                      # 15分足: 100件 = 25時間（推奨）
    "1h": 100                       # 1時間足: 100件 = 約4日間（推奨）
    "4h": 80                        # 4時間足: 80件 = 約13日間（最適化）
  
  # データ品質チェック
  min_data_points: 50               # 最小データ点数（50期間未満は処理停止）
  max_missing_ratio: 0.05           # 欠損値比率上限（5%まで許容）

# 取引・価格関連動的設定（バックテスト専用版）
trading:
  # バックテスト用設定（十分なポジションサイズでテスト）
  initial_balance_jpy: 1000000.0    # 初期残高（100万円・バックテスト用現実的設定）
  default_balance_jpy: 1000000.0    # 後方互換性維持
  fee_rate: 0.0012                  # Bitbank maker手数料
  minimum_live_balance: 10000       # ライブトレード最小残高
  
  # 価格スプレッド設定
  bid_spread_ratio: 0.999           # bid価格 = close × 0.999（0.1%下）
  ask_spread_ratio: 1.001           # ask価格 = close × 1.001（0.1%上）
  
  # フォールバック価格（BTC/JPY想定・2025年8月30日現在価格反映）
  fallback_btc_jpy: 16000000.0      # フォールバック価格（1600万円・現在相場）
  fallback_prices:
    default_bid: 15900000.0         # デフォルトbid価格（1590万円）
    default_ask: 16100000.0         # デフォルトask価格（1610万円）
    bid: 15900000.0                 # フォールバックbid価格（1590万円）
    ask: 16100000.0                 # フォールバックask価格（1610万円）
  
  # ポジションサイジング・リスク管理
  position_sizing:
    max_position_ratio: 0.03        # Kelly基準最大3%
    stop_loss_atr_multiplier: 1.2   # ATRベースストップロス倍率
    take_profit_ratio: 2.0          # テイクプロフィット比率
    stop_loss_rate: 0.02            # ストップロス率（2%）
    take_profit_rate: 0.04          # テイクプロフィット率（4%）
  
  # 信頼度階層設定（1万円運用最適化）
  confidence_levels:
    very_high: 0.8                  # 超高信頼度（エントリー推奨）
    high: 0.65                      # 高信頼度（本番取引閾値）
    medium: 0.5                     # 中信頼度（様子見）
    low: 0.35                       # 低信頼度（見送り推奨）
    min_ml: 0.25                    # ML最小信頼度
  
  # 異常検知設定
  anomaly:
    spread_warning_threshold: 0.003   # スプレッド警告閾値（0.3%）
    spread_critical_threshold: 0.005  # スプレッド重大閾値（0.5%）
    
  # リスク閾値
  risk_thresholds:
    deny: 0.8                       # 拒否閾値
    conditional: 0.6                # 条件付き閾値
    min_ml_confidence: 0.25         # ML最小信頼度

# API・パフォーマンス関連閾値（Phase 16-B拡張版）
performance:
  # API遅延設定
  default_latency_ms: 100.0         # デフォルトAPI遅延（ミリ秒）
  
  # タイムアウト設定
  api_timeout_seconds: 30.0         # API呼び出しタイムアウト
  cycle_timeout_seconds: 300.0      # 取引サイクルタイムアウト
  order_wait_timeout: 30            # 注文約定待機タイムアウト
  discord_timeout: 10               # Discord通知タイムアウト

# システム監視関連閾値（Phase 16-B完全版）
monitoring:
  # エラー発生閾値
  max_consecutive_errors: 5         # 連続エラー上限（この回数でシステム停止）
  error_rate_threshold: 0.1         # エラー率閾値（10%でアラート）
  consecutive_loss_limit: 5         # 連続損失限界
  
  # ヘルスチェック関連
  health_check:
    interval_seconds: 60.0          # ヘルスチェック間隔
    cpu_check_interval: 1           # CPU使用率チェック間隔（秒）
    memory_threshold_percent: 85    # メモリ使用量閾値（%）
    cpu_threshold_percent: 80       # CPU使用率閾値（%）
  
  # Discord通知設定
  discord:
    min_interval: 2                 # 最小送信間隔（秒）
    startup_grace_period: 30        # 起動時通知抑制期間（秒）
    rate_limit_interval: 2          # レート制限間隔
    timeout: 10                     # HTTPタイムアウト（秒）
    max_retries: 3                  # 最大再試行回数
    backoff_seconds: 1              # 再試行間隔（秒）
    
    # 信頼度別色分け閾値（Phase 16-B新規）
    confidence_thresholds:
      high: 0.8                     # 高信頼度閾値（緑色）
      medium: 0.6                   # 中信頼度閾値（黄色）
      low: 0.0                      # 低信頼度（オレンジ色）

# 異常検知詳細設定（Phase 16-B新規）
anomaly_detection:
  # スプレッド関連
  spread:
    warning_threshold: 0.003        # 0.3%警告閾値
    critical_threshold: 0.005       # 0.5%重大閾値
  
  # API遅延関連
  api_latency:
    warning_ms: 1000               # 1秒警告
    critical_ms: 3000              # 3秒重大
  
  # スパイク検知
  spike_detection:
    price_zscore_threshold: 3.0    # 価格スパイク3σ
    volume_zscore_threshold: 3.0   # 出来高スパイク3σ
    lookback_period: 100           # 振り返り期間
  
  # その他検知設定
  detection:
    threshold: 0.001               # 一般的な検知閾値
    min_observations: 20           # 最小観測数（出来高・価格履歴用）
    min_return_samples: 5          # 最小リターンサンプル数（価格変化率計算用）
    zero_volatility_threshold: 0.001  # ゼロボラティリティ時の変動閾値（0.1%）
    market_stress_threshold: 2.0   # マーケットストレス閾値（2σ）
    recent_alert_minutes: 5        # 直近アラート判定期間（分）
  
  # マーケットストレス指標設定
  market_stress:
    price_gap_weight: 0.4          # 価格ギャップ重み（40%）
    intraday_range_weight: 0.3     # 日中変動範囲重み（30%）
    volume_spike_weight: 0.3       # 出来高スパイク重み（30%）
  
  # 正規化設定
  normalization:
    outlier_clip_quantile: 0.95    # 外れ値クリップ分位点（95%）
  
  # Z-Score設定
  zscore:
    calculation_period: 20         # Z-Score計算期間
  
  # 出来高比率設定
  volume_ratio:
    calculation_period: 20         # 出来高比率計算期間

# 取引・実行関連閾値（Phase 16-B拡張版）
execution:
  # 実行間隔設定（Orchestrator）
  paper_mode_interval_seconds: 60   # ペーパートレード実行間隔（1分）
  live_mode_interval_seconds: 180   # ライブトレード実行間隔（3分・収益性重視）
  
  # バックテスト設定
  backtest_period_days: 180         # バックテスト期間（6ヶ月・充分なデータ量確保）

# ポジション管理詳細設定（Phase 16-B新規）
position_management:
  # Kelly基準設定
  kelly_criterion:
    max_position_ratio: 0.03       # 最大ポジション比率3%
    safety_factor: 0.5             # 安全係数50%
    min_trades: 20                 # Kelly計算最小取引数
    min_win_rate: 0.4              # 最小勝率40%
    lookback_days: 30              # Kelly計算参照日数
  
  # デフォルト・フォールバック設定
  default_confidence: 0.5          # デフォルト信頼度
  conservative_base_size: 0.01     # 保守的ベースサイズ（1%）
  fallback_size: 0.01              # フォールバック時のポジションサイズ（1%）
  
  # ドローダウン管理
  drawdown:
    max_ratio: 0.20                # 最大ドローダウン20%
    consecutive_loss_limit: 5      # 連続5損失で停止
    cooldown_hours: 24             # 24時間クールダウン
    persistence_file: ".cache/data/drawdown_state.json"
    recovery_threshold: 0.02       # 2%回復で復帰
    default_balance: 10000.0       # デフォルト残高（1万円・個人運用統一）
  
  # 動的サイジング
  dynamic_sizing:
    base_ratio: 0.01               # ベース比率1%
    confidence_multiplier: 2.0     # 信頼度乗数
    volatility_adjustment: true    # ボラティリティ調整
    target_volatility: 0.01        # 目標ボラティリティ（1%）
    max_scale: 3.0                 # 最大スケール倍率
    stop_atr_multiplier: 2.0       # ATR倍率（ストップロス用）
    stop_loss_safety_ratio: 0.99   # ストップロス安全比率（99%）

# バックテスト専用設定（Phase 16-B完全版）
backtest:
  # 評価設定
  risk_free_rate: 0.001            # リスクフリーレート（0.1%・年利）
  
  # 損益設定
  stop_loss:
    default_rate: 0.02             # デフォルト2%損切り
    atr_multiplier: 1.2            # ATR倍率
    max_rate: 0.05                 # 最大5%損切り
    min_rate: 0.005                # 最小0.5%損切り
  
  take_profit:
    default_rate: 0.04             # デフォルト4%利確
    risk_reward_ratio: 2.0         # リスクリワード比2:1
    max_rate: 0.10                 # 最大10%利確
    min_rate: 0.01                 # 最小1%利確
  
  # ポジション設定
  position:
    max_ratio: 0.05                # バックテスト最大5%
    default_ratio: 0.02            # デフォルト2%
    min_ratio: 0.005               # 最小0.5%
  
  # データ取得・処理
  data:
    bitbank_limit: 2000            # Bitbank API制限
    large_limit: 10000             # 大量データ取得
    small_limit: 100               # 少量データ取得
    fillna_limit: 5                # 欠損値補完期間
    min_data_points: 50            # 最小データ点数
  
  # タイムフレーム設定
  timeframes:
    default: ["15m", "1h", "4h"]   # デフォルト
    extended: ["5m", "15m", "30m", "1h", "4h", "1d"]  # 拡張版
    minimal: ["1h", "4h"]          # 最小版
  
  # 分析設定
  analysis:
    min_trades: 20                 # Kelly基準最小取引数
    confidence_interval: 0.95      # 95%信頼区間
    bootstrap_samples: 1000        # ブートストラップサンプル数

# データ取得詳細設定（Phase 16-B新規）
data_fetching:
  # 取得件数設定
  limits:
    default: 100                   # デフォルト取得件数
    cycle: 100                     # サイクル取得件数
    small: 50                      # 少量取得
    medium: 500                    # 中量取得
    large: 2000                    # 大量取得（Bitbank上限）
    extra_large: 10000             # 超大量取得
  
  # タイムフレーム設定
  timeframes:
    default: ["15m", "1h", "4h"]   # デフォルト
    extended: ["5m", "15m", "30m", "1h", "4h", "1d"]  # 拡張版
    minimal: ["1h", "4h"]          # 最小版
    full: ["1m", "5m", "15m", "30m", "1h", "2h", "4h", "6h", "12h", "1d"]
  
  # API関連
  api:
    retry_count: 3                 # リトライ回数
    retry_delay_ms: 1000           # リトライ遅延
    timeout_seconds: 30            # タイムアウト
    rate_limit_delay_ms: 500       # レート制限遅延
  
  # キャッシュ設定
  cache:
    enabled: true                  # キャッシュ有効
    ttl_minutes: 5                 # TTL 5分
    max_entries: 1000              # 最大エントリ数
    memory_limit_mb: 50            # メモリ制限

# ファイルI/O・ログ関連設定（Phase 16-B拡張版）
file_io:
  # レポート保存設定
  reports:
    directory: "logs/reports"      # レポート保存ディレクトリ
    max_files: 100                 # 最大レポートファイル数
    max_size_mb: 10                # 最大ファイルサイズ
    compression: true              # 圧縮有効
  
  # ログ設定
  logging:
    retention_days: 7              # ログ保持日数
    rotation: "daily"              # ローテーション頻度
    max_size_mb: 100              # 最大サイズ
    backup_count: 5               # バックアップファイル数
  
  # バックアップ設定
  backup:
    retention_days: 30             # バックアップ保持日数
    directory: ".cache/backup"     # バックアップディレクトリ
    compression_level: 6           # 圧縮レベル
    
  # 一時ファイル設定
  temp:
    directory: ".cache/temp"       # 一時ディレクトリ
    cleanup_hours: 24              # クリーンアップ間隔
    max_size_mb: 1000             # 最大サイズ

# ========================================
# 使用方法:
# 
# from src.core.config import get_threshold
# confidence = get_threshold("ml.default_confidence", 0.5)
# interval = get_threshold("execution.paper_mode_interval_seconds", 60)
# ========================================