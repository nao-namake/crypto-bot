# =============================================================================
# ファイル名: config/bitbank_production.yml
# 説明:
# Bitbank本番運用設定（Bybit Testnet検証後に使用）
# - 50万円スタートで年2倍（100万円）を目指す積極運用
# - 現物のみ（レバレッジなし）で安全性確保
# - 国内取引所の特性（スプレッド・流動性）を考慮した調整済み
# =============================================================================

# ----------------------------------------------------------------------
# データ取得設定（Bitbank本番）
# ----------------------------------------------------------------------
data:
  exchange: bitbank
  symbol: BTC/JPY  # JPY建て取引
  timeframe: 1h

  # ------ Bitbank 本番オプション ------
  api_key: ${BITBANK_API_KEY}
  api_secret: ${BITBANK_API_SECRET}
  ccxt_options:
    enableRateLimit: true
    rateLimit: 1000  # Bitbank API制限に配慮
  # --------------------------------------

  # データ取得範囲
  since: "2021-01-01T00:00:00Z"
  limit: 20000
  paginate: true
  per_page: 200  # Bitbankの制限に合わせて縮小

# ----------------------------------------------------------------------
# 戦略設定 ―― MLStrategy（Bitbank調整版）
# ----------------------------------------------------------------------
strategy:
  type: single
  name: ml
  params:
    model_path: model/calibrated_model.pkl
    threshold: 0.06  # テストネットより保守的（スプレッド考慮）
    
    # 動的閾値調整パラメータ（Bitbank調整）
    atr_multiplier: 0.4  # 流動性考慮で保守的に
    volatility_adjustment: true
    threshold_bounds: [0.02, 0.15]  # Bitbank特性に合わせて調整
    
    thresholds_to_test:
      - 0.03
      - 0.06
      - 0.08
      - 0.10
      - 0.12

# ----------------------------------------------------------------------
# リスク管理（Bitbank本番調整）
# ----------------------------------------------------------------------
risk:
  risk_per_trade: 0.02  # 0.025 → 0.02（本番では少し保守的）
  stop_atr_mult: 1.4   # 1.3 → 1.4（スリッページ考慮）
  dynamic_position_sizing:
    enabled: true
    formula: linear
  
  # Kelly基準（本番では慎重に）
  kelly_criterion:
    enabled: true
    lookback_window: 40  # 30 → 40（より安定した判断）
    max_fraction: 0.15  # 20% → 15%（本番では保守的）
    min_trades_required: 15

# ----------------------------------------------------------------------
# バックテスト（50万円本番想定）
# ----------------------------------------------------------------------
backtest:
  starting_balance: 500000.0  # 50万円
  slippage_rate: 0.003  # Bitbank実績値（Bybitの3倍）
  trade_log_csv: "./results/trade_log_bitbank.csv"
  aggregate_out_prefix: "./results/aggregate_bitbank"

# ----------------------------------------------------------------------
# パラメータ最適化
# ----------------------------------------------------------------------
optimizer:
  periods: []
  nbdevs:  []
  parallel: false
  max_workers: 1

# ----------------------------------------------------------------------
# ウォークフォワード分割
# ----------------------------------------------------------------------
walk_forward:
  train_window: 1500     # 安定性重視
  test_window: 250       # 十分な検証期間
  step: 250

# ----------------------------------------------------------------------
# 機械学習（ML）設定（本番調整版）
# ----------------------------------------------------------------------
ml:
  feat_period: 14
  lags: [1,2,3,4,5,6,7,8,9,10,11,12]
  rolling_window: 20     # 安定性重視
  horizon: 5
  target_type: classification
  model_type: lgbm

  # アンサンブルモデル設定（本番では安定性重視）
  ensemble:
    enabled: true
    method: weighted  # stacking → weighted（安定性重視）
    weights: [0.5, 0.3, 0.2]  # LightGBM重視
    
    base_models:
      - type: lgbm
        n_estimators: 100  # 89 → 100（安定性向上）
        max_depth: 8      # 9 → 8（過学習防止）
        learning_rate: 0.08  # 少し保守的に
        bagging_fraction: 0.7
        lambda_l1: 1.2
        lambda_l2: 0.8
      - type: rf
        n_estimators: 100
        max_depth: 7
        min_samples_split: 6
        min_samples_leaf: 3
      - type: xgb
        n_estimators: 80
        max_depth: 6
        learning_rate: 0.08
        subsample: 0.8
        colsample_bytree: 0.8

  # 基本特徴量のみ（安定性重視）
  extra_features:
    - rsi_14
    - macd
    - rci_9
    - volume_zscore
    - day_of_week
    - hour_of_day
    - mochipoyo_long_signal
    - mochipoyo_short_signal
    # 新指標は段階的に追加検討
    - stoch
    - bb

  # Optuna設定（本番では控えめ）
  optuna:
    n_trials: 10
    timeout: 300
    direction: maximize
    sampler:
      name: TPESampler
    pruner:
      name: MedianPruner
      n_startup_trials: 3
      n_warmup_steps: 5
      interval_steps: 1

  # 安定したモデルパラメータ
  model_params:
    n_estimators: 100
    max_depth: 8
    learning_rate: 0.08
    bagging_fraction: 0.7
    lambda_l1: 1.2
    lambda_l2: 0.8

  # 保守的な探索範囲
  model_params_search_space:
    max_depth:        [6,8,10]
    learning_rate:    [0.05,0.08,0.1]
    feature_fraction: [0.8,1.0]
    bagging_fraction: [0.7,0.8,1.0]
    lambda_l1:        [0.8,1.2,1.5]
    lambda_l2:        [0.5,0.8,1.2]

  # モデルキャリブレーション
  calibration:
    method: sigmoid
    cv: prefit