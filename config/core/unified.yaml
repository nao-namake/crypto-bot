# ========================================
# 統一設定ファイル (unified.yaml) - Phase 28完了・Phase 29最適化版
# ========================================
#
# Phase 29最適化：設定重複完全解消・視覚的改善・理解しやすい構造化
# 作成日: 2025年9月7日 | 最終更新: Phase 28完了・Phase 29最適化完了
# 目的: 基本設定の統一管理・動的閾値はthresholds.yamlで管理
#
# 重要: 1つの設定ファイルで全環境をサポート
#       モード制御: コマンドライン引数 > 環境変数MODE > YAML内mode
#       動的閾値: thresholds.yamlで管理（get_threshold使用）
#
# 使用方法:
#   開発: python main.py --config config/core/unified.yaml --mode paper
#   本番: python main.py --config config/core/unified.yaml --mode live
#   環境変数: MODE=live python main.py --config config/core/unified.yaml
#
# ========================================

# 動作モード（デフォルト: ペーパートレード・安全性優先）
mode: paper  # paper/live/backtest（環境変数・CLIで上書き可能）

# ========================================
# モード別初期残高設定（一元管理・Phase 23追加）
# ========================================
# 用途: 将来的な残高変更（10万円、50万円等）時に一箇所修正で完結
# 参照: ExecutionService、IntegratedRiskManager、DrawdownManager
mode_balances:
  paper:
    initial_balance: 10000.0      # ペーパートレード初期残高
    description: "ペーパートレード用初期残高（実験・検証用）"
  live:
    initial_balance: 10000.0      # ライブトレード初期残高（実際のAPI残高取得に基づく）
    description: "ライブトレード用初期残高（本番運用・API取得ベース）"
  backtest:
    initial_balance: 10000.0      # バックテスト初期残高
    description: "バックテスト用初期残高（過去データ検証用）"

# 取引所設定（bitbank信用取引専用）
exchange:
  name: bitbank
  symbol: BTC/JPY
  leverage: 1.0
  rate_limit_ms: 35000
  timeout_ms: 120000
  retries: 5
  ssl_verify: true
  api_version: v1

# ========================================
# 機械学習設定（統一設定管理体系最適化）
# ========================================
# 注意: 信頼度闾値はthresholds.yamlで管理、model_weightsはensembleセクションで統一
ml:
  ensemble_enabled: true
  models:
  - lgbm
  - xgb
  - rf
  model_path: /app/models/production/production_ensemble.pkl
  model_update_check: true
  fallback_enabled: true
  prediction:
    lookback_periods: 100
    retrain_frequency: weekly

# ========================================
# データ取得設定（マルチタイムフレーム統一）
# ========================================
data:
  timeframes:
  - 4h
  - 15m
  since_hours: 96
  limit: 100
  cache_enabled: true
  cache:
    enabled: true
    ttl_minutes: 5
    max_size: 1000
    disk_cache: true
    retention_days: 90

# ========================================
# 特徴量設定（15特徴量統一システム）
# ========================================
features:
  mode: optimized
  basic:
  - close
  - volume
  momentum:
  - rsi_14
  - macd
  volatility:
  - atr_14
  - bb_position
  trend:
  - ema_20
  - ema_50
  volume:
  - volume_ratio
  breakout:
  - donchian_high_20
  - donchian_low_20
  - channel_position
  regime:
  - adx_14
  - plus_di_14
  - minus_di_14

# ========================================
# 戦略設定（5戦略統合）
# ========================================
strategies:
  enabled:
  - atr_based
  - mochipoy_alert
  - multi_timeframe
  - donchian_channel
  - adx_trend
  weights:
    atr_based: 0.25
    mochipoy_alert: 0.25
    multi_timeframe: 0.2
    donchian_channel: 0.15
    adx_trend: 0.15
  consensus:
    required_agreement: 0.4
    confidence_threshold: 0.3

# ========================================
# リスク管理設定（Kelly基準・個人開発最適化）
# ========================================
# 注意: Kelly基準詳細設定・リスク閾値はthresholds.yamlで管理
risk:
  risk_per_trade: 0.01
  max_drawdown: 0.2
  stop_loss_atr_multiplier: 1.2
  consecutive_loss_limit: 5
  take_profit_ratio: 2.0
  daily_loss_limit: 0.05
  weekly_loss_limit: 0.1
  emergency_stop_enabled: true
  drawdown_manager:
    max_drawdown_ratio: 0.2
    consecutive_loss_limit: 8  # 5→8（連続損失許容を増加・取引機会拡大）
    cooldown_hours: 6          # 24→6（停止時間を大幅短縮・月100-200回対応）
    # 初期残高設定は mode_balances セクションから取得
    fallback_balance: 11000.0  # フォールバック残高（円）- API失敗時判別用
    persistence:
      local_path: "src/core/state/drawdown_state.json"  # ローカル状態ファイルパス
      gcs_bucket: "crypto-bot-state"                    # Cloud Storageバケット名
      gcs_path: "drawdown/state.json"                   # Cloud Storageオブジェクトパス
  anomaly_detector:
    lookback_period: 20
    spread_warning_threshold: 0.003
    spread_critical_threshold: 0.005
    api_latency_warning: 1.0
    api_latency_critical: 3.0

# ========================================
# 注文実行設定
# ========================================
execution:
  mode: paper
  order:
    default_type: limit
    slippage_tolerance: 0.001
    max_retry: 3
    retry_delay: 1.0
  latency:
    target_ms: 1000
    warning_ms: 500
    critical_ms: 2000

# ========================================
# 本番運用設定（MODE=live時有効）
# ========================================
production:
  min_order_size: 0.0001  # Bitbank最小取引単位（0.0001 BTC = 約1,700円）
  max_order_size: 0.0005  # 1万円運用に適合（約8,500円相当、安全な上限設定）
  trade_interval: 300  # Phase 37.3: 180→300秒（3分→5分）・月700-900円コスト削減
  margin_trading: true
  force_margin_mode: true

# ========================================
# ログ設定（環境別対応）
# ========================================
logging:
  level: INFO
  file_enabled: true
  discord_enabled: true
  retention_days: 7
  file:
    enabled: true
    path: logs/production
    rotation: daily
    retention_days: 30
    max_size_mb: 100
  discord:
    enabled: true
    webhook_url: ${DISCORD_WEBHOOK_URL}
    levels:
      critical: true
      warning: true
      info: false

# ========================================
# 監視・ヘルスチェック
# ========================================
monitoring:
  health_check:
    enabled: true
    interval_seconds: 30
    timeout_seconds: 5
    manual_execution: true
  performance:
    enabled: true
    metrics_interval: 300

# ========================================
# GCP Cloud Run最適化
# ========================================
cloud_run:
  memory: 1Gi
  cpu: 1
  min_instances: 1
  max_instances: 2
  concurrency: 1
  timeout_seconds: 3600

# ========================================
# セキュリティ設定
# ========================================
security:
  secret_management: gcp_secret_manager
  workload_identity: true

# ========================================
# 取引制約・制限事項（個人開発）
# ========================================
trading_constraints:
  exchange: bitbank
  trading_type: margin
  leverage_max: 2.0
  leverage_actual: 1.0
  currency_pair: BTC/JPY
  default_order_type: limit  # Phase 29.6: 成行→指値に変更（手数料最適化: Taker 0.12% → Maker -0.02%）
  initial_capital: 10000
  target_capital: 500000
  features_count: 15
  timeframes:
  - 4h
  - 15m

# ========================================
# アンサンブルモデル重み設定（統一）
# ========================================
ensemble:
  weights:
    lightgbm: 0.5      # LightGBM 50%（メインモデル）
    xgboost: 0.3       # XGBoost 30%（補完モデル）
    random_forest: 0.2 # RandomForest 20%（安定化モデル）

# ========================================
# レポート設定
# ========================================
reporting:
  error_dir: logs/reports/errors
  max_report_size_mb: 10
  retention_days: 30
  max_files_per_type: 100
  json_enabled: true
  markdown_enabled: true
  timestamp_format: '%Y%m%d_%H%M%S'

# ========================================
# Discord通知設定
# ========================================
discord:
  # 基本設定
  max_retries: 3
  timeout_seconds: 10
  max_message_length: 2000
  embed_color:
    success: 65280
    warning: 16776960
    error: 16711680
    info: 39423

  # バッチ処理設定（通知負荷軽減）
  batch_notifications: true
  batch_interval_minutes: 60
  daily_summary_hour: 18  # JST 18:00に日次サマリー送信

  # レート制限強化
  rate_limit:
    min_interval_seconds: 5      # 最小間隔を5秒に拡大
    max_per_hour: 12            # 1時間最大12通知
    burst_limit: 3              # 短時間バースト制限

  # 通知レベル最適化
  notification_levels:
    critical: immediate          # 即時通知（残高異常等）
    warning: batch              # バッチ集約（1時間毎）
    info: daily                 # 日次サマリーのみ

  # 起動時設定
  startup_grace_period: 30      # 起動後30秒は通知抑制
  min_interval: 2               # 従来設定（後方互換）
