# ========================================
# 統一設定ファイル (unified.yaml)
# ========================================
# 
# Phase 19 MLOps統合対応・全環境統一設定・v16.3.0
# 作成日: 2025年9月7日
# 目的: base.yaml + production.yamlの統合・メンテナンス性向上・設定一元化
#
# 重要: 1つの設定ファイルで全環境をサポート
#       モード制御: コマンドライン引数 > 環境変数MODE > YAML内mode
#
# 使用方法:
#   開発: python main.py --config config/core/unified.yaml --mode paper
#   本番: python main.py --config config/core/unified.yaml --mode live
#   環境変数: MODE=live python main.py --config config/core/unified.yaml
#
# ========================================
# 基本設定（全環境共通）
# ========================================

# 動作モード（デフォルト: ペーパートレード・安全性優先）
mode: paper  # paper/live/backtest（環境変数・CLIで上書き可能）

# 取引所設定（bitbank信用取引専用）
exchange:
  name: bitbank
  symbol: "BTC/JPY"          # 信用取引専用通貨ペア
  leverage: 1.0              # 1倍（安全性最優先・実質現物取引相当）
  
  # API制限（全環境共通）
  rate_limit_ms: 35000       # 35秒間隔（安全マージン）
  timeout_ms: 120000         # 2分タイムアウト（安全性）
  retries: 5                 # リトライ回数増加（信頼性）
  
  # セキュリティ設定
  ssl_verify: true           # SSL証明書検証必須
  api_version: "v1"          # APIバージョン固定

# ========================================
# 機械学習設定（Phase 19 MLOps統合）
# ========================================
ml:
  # 統一信頼度閾値（収益性重視・高品質シグナル確保）
  confidence_threshold: 0.65    # 65%（収益機会拡大・高品質シグナル確保のバランス）
  
  # ProductionEnsembleモデル設定
  ensemble_enabled: true
  models: ["lgbm", "xgb", "rf"]
  model_weights: [0.5, 0.3, 0.2]  # LightGBM重視（実績ベース）
  
  # モデル管理（Phase 19 MLOps対応）
  model_path: "/app/models/production/production_ensemble.pkl"
  model_update_check: true      # モデル更新チェック有効
  fallback_enabled: true        # フォールバック機能有効
  
  # 予測設定（品質保証）
  prediction:
    lookback_periods: 100
    retrain_frequency: "weekly"

# ========================================
# データ取得設定（マルチタイムフレーム統一）
# ========================================
data:
  # タイムフレーム（2軸構成・MLOps最適化）
  timeframes: ["15m", "4h"]
  since_hours: 96            # 4日分（Bitbank安定範囲）
  limit: 100                 # 確実な取得数
  
  # キャッシュ設定（統一）
  cache:
    enabled: true
    ttl_minutes: 5           # 5分間キャッシュ
    max_size: 1000           # 最大1000エントリ
    disk_cache: true
    retention_days: 90       # 90日保存

# 特徴量設定（Phase 19・12個厳選システム統一）
features:
  mode: "optimized"  # 12個厳選特徴量
  
  # 基本特徴量（3個）
  basic:
    - "close"
    - "volume" 
    - "returns_1"
  
  # テクニカル指標（6個）
  technical:
    - "rsi_14"
    - "macd"
    - "atr_14"
    - "bb_position"
    - "ema_20"
    - "ema_50"
  
  # 異常検知（3個）
  anomaly:
    - "zscore"
    - "volume_ratio"
    - "market_stress"

# 戦略設定（Phase 19統合版）
strategies:
  enabled:
    - "atr_based"
    - "mochipoy_alert"
    - "multi_timeframe"
    - "fibonacci_retracement"
  
  # 戦略重み（実績ベース）
  weights:
    atr_based: 0.3
    mochipoy_alert: 0.3
    multi_timeframe: 0.25
    fibonacci_retracement: 0.15
  
  # 統合判定
  consensus:
    required_agreement: 0.6     # 60%以上の合意で実行
    confidence_threshold: 0.4

# ========================================
# リスク管理設定（統一・個人開発最適化）
# ========================================
risk:
  # Kelly基準ポジションサイジング（統一）
  kelly_criterion:
    max_position_ratio: 0.03    # 最大3%（個人開発安全性重視）
    safety_factor: 0.7          # Kelly値の70%使用
    min_trades_for_kelly: 20
  
  # 基本リスク設定
  risk_per_trade: 0.01          # 1取引あたり1%（安全・統一）
  kelly_max_fraction: 0.03      # Kelly基準最大3%（個人開発適正）
  max_drawdown: 0.20            # 最大ドローダウン20%
  stop_loss_atr_multiplier: 1.2  # 1.2×ATR損切り（実証値）
  consecutive_loss_limit: 5     # 連続5損失で24時間停止
  
  # ドローダウン管理
  drawdown_manager:
    max_drawdown_ratio: 0.20    # 20%上限
    consecutive_loss_limit: 5   # 連続5損失で停止
    cooldown_hours: 24          # 24時間クールダウン
  
  # 異常検知（統一）
  anomaly_detector:
    spread_warning_threshold: 0.003   # 0.3%
    spread_critical_threshold: 0.005  # 0.5%
    api_latency_warning: 1.0          # 1秒
    api_latency_critical: 3.0         # 3秒
  
  # 統合判定閾値
  risk_thresholds:
    min_ml_confidence: 0.5          # 最小ML信頼度50%
    risk_threshold_deny: 0.8        # 80%以上でDENY
    risk_threshold_conditional: 0.6  # 60%以上で条件付き

# ========================================
# 注文実行設定（統一）
# ========================================
execution:
  mode: "paper"  # デフォルト（環境変数・CLIで上書き）
  
  # 注文設定（実証済み値）
  order:
    default_type: "limit"       # 指値注文優先
    slippage_tolerance: 0.001   # 0.1%スリッページ許容
    max_retry: 3
    retry_delay: 1.0            # 1秒間隔
  
  # レイテンシー目標
  latency:
    target_ms: 1000             # 1秒以内
    warning_ms: 500             # 500ms警告
    critical_ms: 2000           # 2秒クリティカル

# ========================================
# 🚨 本番専用設定（MODE=live時のみ有効）
# ========================================
production:
  min_order_size: 0.0001        # 最小注文サイズ
  max_order_size: 0.001         # 最大注文サイズ（個人開発適正）
  trade_interval: 180           # 取引間隔（秒）・収益性重視（3分間隔）
  margin_trading: true          # 信用取引有効
  force_margin_mode: true       # 信用取引強制

# ========================================
# ログ設定（環境別対応）
# ========================================
logging:
  level: "INFO"                 # 情報レベル
  file_enabled: true            # ファイル記録
  discord_enabled: true         # Discord監視
  retention_days: 30            # 保持期間（本番長期・開発短期）
  
  # ファイルログ
  file:
    enabled: true
    path: "logs/production"
    rotation: "daily"
    retention_days: 30
    max_size_mb: 100
  
  # Discord通知（統一）
  discord:
    enabled: true
    webhook_url: "${DISCORD_WEBHOOK_URL}"
    
    # 通知レベル設定
    levels:
      critical: true            # 取引停止、重大エラー
      warning: true             # API遅延、異常値
      info: false               # 通常取引（本番では無効化）

# ========================================
# 監視・ヘルスチェック（統一強化）
# ========================================
monitoring:
  # ヘルスチェック
  health_check:
    enabled: true
    interval_seconds: 30
    timeout_seconds: 5
    manual_execution: true      # 手動実行対応
    
  # パフォーマンス監視
  performance:
    enabled: true
    metrics_interval: 300       # 5分間隔

# ========================================
# GCP Cloud Run最適化（統一）
# ========================================
cloud_run:
  # リソース設定（実証済み: 1Gi十分・MLモデル軽量）
  memory: "1Gi"
  cpu: 1
  
  # スケーリング
  min_instances: 1              # 本番は常時稼働
  max_instances: 2              # 負荷分散対応
  concurrency: 1                # 取引整合性確保
  
  # タイムアウト
  timeout_seconds: 3600         # 1時間

# ========================================
# セキュリティ設定（GCP統合）
# ========================================
security:
  secret_management: "gcp_secret_manager"  # GCP Secret Manager使用
  workload_identity: true                  # Workload Identity認証

# ========================================
# 制約・制限事項（個人開発）
# ========================================
trading_constraints:
  exchange: "bitbank"
  trading_type: "margin"        # 信用取引専用
  leverage_max: 2.0             # 2倍レバレッジ上限（bitbank仕様）
  leverage_actual: 1.0          # 実際使用（安全性重視）
  currency_pair: "BTC/JPY"
  initial_capital: 10000        # 1万円スタート
  target_capital: 500000        # 最終目標50万円
  features_count: 12            # 厳選特徴量数
  timeframes: ["15m", "4h"]     # マルチタイムフレーム