# Phase 8本番環境設定 - production.yaml
# レガシーシステム実証済み設定 + Phase 8バックテスト最適化統合

# システム基本設定
system:
  name: "crypto-bot-phase8-production"
  version: "8.0.0"
  mode: "live"  # 本番は実取引モード
  debug: false
  log_level: "INFO"

# 取引所設定（Bitbank信用取引特化・レガシー最適化継承）
exchange:
  name: "bitbank"
  symbol: "BTC/JPY"
  leverage: 1.0  # 保守的レバレッジ
  
  # API設定（環境変数から取得）
  api_key: "${BITBANK_API_KEY}"
  api_secret: "${BITBANK_API_SECRET}"
  sandbox: false  # 本番環境
  
  # API制限・タイムアウト（レガシー実証済み値）
  rate_limit: 30000     # 30秒制限（安定性重視）
  timeout: 90000        # 90秒タイムアウト（大量データ対応）
  enable_rate_limit: true
  retries: 3            # リトライ回数（適度に抑制）

# データ設定（レガシー最適化継承）
data:
  # タイムフレーム（レガシー実証済み）
  timeframes: ["15m", "1h", "4h"]
  since_hours: 96       # 4日分（Bitbank安定範囲）
  limit: 100           # 確実な取得数
  
  # キャッシュ設定
  cache:
    enabled: true
    ttl_minutes: 5      # 5分間キャッシュ
    max_size: 1000      # 最大1000エントリ
    disk_cache: true
    retention_days: 90  # 90日保存

# 特徴量設定（Phase 3最適化版）
features:
  mode: "optimized"  # 12個厳選特徴量
  
  # 基本特徴量
  basic:
    - "close"
    - "volume" 
    - "returns_1"
  
  # テクニカル指標
  technical:
    - "rsi_14"
    - "macd"
    - "atr_14"
    - "bb_position"
    - "ema_20"
    - "ema_50"
  
  # 異常検知
  anomaly:
    - "zscore"
    - "volume_ratio"
    - "market_stress"

# 戦略設定（Phase 4統合版）
strategies:
  enabled:
    - "atr_based"
    - "mochipoy_alert"
    - "multi_timeframe"
    - "fibonacci_retracement"
  
  # 戦略重み（実績ベース）
  weights:
    atr_based: 0.3
    mochipoy_alert: 0.3
    multi_timeframe: 0.25
    fibonacci_retracement: 0.15
  
  # 統合判定
  consensus:
    required_agreement: 0.6  # 60%以上の合意で実行
    confidence_threshold: 0.4

# 機械学習設定（Phase 8バックテスト最適化）
ml:
  ensemble_enabled: true      # アンサンブル有効
  confidence_threshold: 0.5   # Phase 8最適化（0.25→0.5・適切な精度確保）
  
  # アンサンブル設定（レガシー実績ベース）
  models:
    - "lgbm"     # 実績のある3モデル
    - "xgb"
    - "rf"
  
  model_weights:  # 最適化済み重み
    - 0.5         # LightGBM
    - 0.3         # XGBoost
    - 0.2         # RandomForest
  
  # 予測設定
  prediction:
    lookback_periods: 100
    retrain_frequency: "weekly"

# リスク管理設定（Phase 6完全版・レガシー実証値活用）
risk:
  # Kelly基準ポジションサイジング（Phase 8バックテスト最適化）
  kelly_criterion:
    max_position_ratio: 0.05    # 最大5%（Phase 8最適化・過度な保守性解消）
    safety_factor: 0.7          # Kelly値の70%使用
    min_trades_for_kelly: 20
  
  # Phase 8バックテスト最適化設定
  risk_per_trade: 0.01        # 1取引あたり1%（安全・維持）
  kelly_max_fraction: 0.05    # Kelly基準最大5%（Phase 8最適化: 0.03→0.05）
  max_drawdown: 0.20          # 最大ドローダウン20%
  stop_loss_atr_multiplier: 1.2  # 1.2×ATR損切り（レガシー実証値）
  consecutive_loss_limit: 5   # 連続5損失で24時間停止
  
  # ドローダウン管理
  drawdown_manager:
    max_drawdown_ratio: 0.20    # 20%上限
    consecutive_loss_limit: 5   # 連続5損失で停止
    cooldown_hours: 24          # 24時間クールダウン
  
  # 異常検知（Phase 6）
  anomaly_detector:
    spread_warning_threshold: 0.003   # 0.3%
    spread_critical_threshold: 0.005  # 0.5%
    api_latency_warning: 1.0         # 1秒
    api_latency_critical: 3.0        # 3秒
  
  # 統合判定閾値（Phase 8バックテスト最適化）
  risk_thresholds:
    min_ml_confidence: 0.5         # 最小ML信頼度50%（Phase 8最適化: 0.25→0.5）
    risk_threshold_deny: 0.8       # 80%以上でDENY
    risk_threshold_conditional: 0.6 # 60%以上で条件付き

# 注文実行設定（Phase 7）
execution:
  mode: "live"  # 本番は実取引
  
  # 注文設定（レガシー実証済み値）
  order:
    default_type: "limit"  # 指値注文優先
    slippage_tolerance: 0.001  # 0.1%スリッページ許容
    max_retry: 3
    retry_delay: 1.0  # 1秒間隔
  
  # レイテンシー目標（Phase 7）
  latency:
    target_ms: 1000    # 1秒以内
    warning_ms: 500    # 500ms警告
    critical_ms: 2000  # 2秒クリティカル

# 本番専用設定（Phase 7収益性最適化・レガシー参考値採用）
production:
  min_order_size: 0.0001     # 最小注文サイズ
  max_order_size: 0.001      # 最大注文サイズ（0.0005→0.001・収益性向上）
  trade_interval: 60         # 取引間隔（秒）
  margin_trading: true       # 信用取引有効
  force_margin_mode: true    # 信用取引強制

# ログ設定（レガシー最適化継承）
logging:
  level: "INFO"              # 本番情報レベル
  file_enabled: true         # ファイル記録必須
  discord_enabled: true      # Discord監視必須
  retention_days: 30         # 本番は長期保持
  
  # ファイルログ
  file:
    enabled: true
    path: "logs/production"
    rotation: "daily"
    retention_days: 30
    max_size_mb: 100
  
  # Discord通知
  discord:
    enabled: true
    webhook_url: "${DISCORD_WEBHOOK_URL}"
    
    # 通知レベル設定
    levels:
      critical: true   # 取引停止、重大エラー
      warning: true    # API遅延、異常値
      info: false      # 通常取引（本番では無効化）

# 監視・ヘルスチェック
monitoring:
  # ヘルスチェック
  health_check:
    enabled: true
    interval_seconds: 30
    timeout_seconds: 5
    
  # パフォーマンス監視
  performance:
    enabled: true
    metrics_interval: 300  # 5分間隔

# GCP Cloud Run最適化
cloud_run:
  # リソース設定
  memory: "2Gi"
  cpu: 1
  
  # スケーリング
  min_instances: 1     # 本番は常時稼働
  max_instances: 1     # 単一インスタンス
  concurrency: 1       # 取引整合性確保
  
  # タイムアウト
  timeout_seconds: 3600  # 1時間