# 151特徴量本番環境設定（マルチタイムフレーム×アンサンブル学習）
# 外部データ統合・品質監視・手数料最適化・2段階アンサンブル完全版

data:
  exchange: bitbank
  symbol: BTC/JPY
  timeframe: 1h  # ベースタイムフレーム（マルチタイムフレーム変換用）
  api_key: ${BITBANK_API_KEY}
  api_secret: ${BITBANK_API_SECRET}
  ccxt_options:
    enableRateLimit: true
    rateLimit: 20000  # Phase G.1.1: 構造修正後最適設定（20秒間隔・確実なAPI安全性）
    timeout: 60000   # タイムアウト60秒（API応答時間考慮）
    verbose: false   # デバッグ用（本番ではfalse）

  # Phase H.21.5: データ品質監視強化・効率化・安定性重視
  limit: 400       # 500→400件（品質重視・安定性向上）
  paginate: true   # ページネーション有効
  per_page: 80     # 100→80件（バッチサイズ最適化・API負荷軽減）
  since_hours: 96  # 120→96時間（効率化・十分なデータ範囲維持）
  weekend_data: true  # Phase G.1.1: 土日データ復活（ML精度向上・構造修正で安全性確保）
  fetch_retries: 3    # Phase H.6.2: リトライ増加（2→3回、データ取得確実性向上）
  adaptive_rate_limit: true  # 動的レート制限有効化
  
  # 土日ギャップ対応設定（動的since_hours拡張・品質向上対応）
  weekend_extension_hours: 72  # 月曜日追加時間（48→72に拡大）
  early_week_extension_hours: 36  # 火曜午前追加時間（24→36に拡大）
  
  # Phase H.4: ページネーション適正化パラメータ（データ取得優先・早期終了防止）
  max_consecutive_empty: 5  # 連続空バッチ許容数（1→5、データ取得優先）
  max_consecutive_no_new: 10  # 連続新レコードなし許容数（1→10、十分な取得機会確保）
  max_attempts: 20  # 最大試行回数（15→20、データ取得機会拡大）
  exponential_backoff: true  # 指数バックオフ有効化
  min_delay_ms: 30000  # Phase H.6.2: API負荷軽減強化（20000→30000ms、30秒遅延）
  max_delay_ms: 45000  # Phase H.6.2: 最大遅延延長（30000→45000ms、API保護強化）
  
  # マルチタイムフレーム対応データ設定（Phase H.12: 4h内部処理復活・API Error回避）
  multi_timeframe_data:
    base_timeframe: "1h"  # データ取得ベース（Bitbank APIから1hのみ取得）
    target_timeframes:    # Phase H.12: 4h内部処理復活・API直接取得は禁止維持
      15m:
        method: "interpolation"  # 1h→15m 補間
        min_points: 10           # Phase H.9.1: 15→10に緩和（ATR計算成功優先）
      1h:
        method: "direct"         # 直接使用
        min_points: 10           # Phase H.9.1: 15→10に緩和（現実的最小値）
      4h:
        method: "aggregation"    # Phase H.12: 1h→4h集約（内部処理のみ・API取得禁止）
        min_points: 8            # Phase H.12: 4h×8=32時間分の最小データ要件
        api_fetch: false         # Phase H.12: API Error 10000防止・内部処理専用

strategy:
  type: multi_timeframe_ensemble
  name: multi_timeframe_ensemble
  params:
    model_path: /app/models/production/model.pkl  # 固定パス統一
    threshold: 0.02  # Phase H.15: エントリー頻度最適化（月60-100回目標）
    # 動的閾値調整パラメータ
    atr_multiplier: 0.3  # Phase H.15: 0.5→0.3（影響抑制）
    volatility_adjustment: true
    threshold_bounds: [0.005, 0.10]  # Phase H.15: より狭い範囲で安定性向上
    max_volatility_adj: 0.03  # Phase H.15: ボラティリティ調整上限（新規）
    performance_adj_range: [-0.003, 0.005]  # Phase H.15: パフォーマンス調整範囲（新規）
    # 戦略が期待するMLセクション全体を追加
    ml:
      feat_period: 14
      lags: [1,2,3]  # Phase H.9.3: [1,2,3,4,5]→[1,2,3]削減・データ消費抑制・効率向上
      rolling_window: 10  # Phase H.9.3: 20→10削減・データ効率向上・即座取引開始対応
      horizon: 5
      target_type: classification
      model_type: lgbm
      ensemble:
        enabled: true
        method: trading_stacking
        confidence_threshold: 0.60  # Phase H.15: 0.65→0.60（より多くのシグナル通過）
        risk_adjustment: true
        models: ["lgbm", "xgb", "rf"]  # LightGBM, XGBoost, RandomForest
        model_weights: [0.5, 0.3, 0.2]  # 性能ベース重み
      # 151特徴量フル版復旧・エラー耐性強化
      extra_features:
        # 基本テクニカル特徴量
        - rsi_14
        - rsi_7
        - rsi_21
        - macd
        - sma_10
        - sma_20
        - sma_50
        - sma_100
        - sma_200
        - ema_10
        - ema_12
        - ema_26
        - ema_50
        - ema_100
        - bb_upper
        - bb_lower
        - bb_percent
        - bb_width
        - atr_7
        - atr_14
        - atr_21
        - volume_sma
        - volume_zscore_14
        - volume_zscore_50
        - momentum_14
        - trend_strength
        # 高度テクニカル指標
        - stoch
        - willr_14
        - adx
        - cmf_20
        - fisher
        # 外部データ特徴量（エラー耐性強化済み）
        - vix
        - dxy
        - fear_greed
        - funding
        # 時間・シグナル特徴量
        - day_of_week
        - hour_of_day
        - price_change_1h
        - price_change_4h
        - price_change_24h
        - volume_change_1h
        - volume_change_24h
        - volatility_1h
        - volatility_24h
      # 外部データ設定
      external_data:
        enabled: true
        cache_enabled: true
        fallback_enabled: true

# マルチタイムフレーム設定（Phase H.12: 4h内部処理復活・本来の3タイムフレーム戦略復旧）
multi_timeframe:
  timeframes: ["15m", "1h", "4h"]  # Phase H.12: 4h内部処理復活・本来設計通り
  weights: [0.3, 0.5, 0.2]  # Phase H.12: 本来重み復活・15分足30%, 1時間足50%, 4時間足20%
  data_sync_enabled: true
  missing_data_tolerance: 0.1  # 10%まで欠損許容
  timeframe_consensus_threshold: 0.6  # 60%以上の合意で信号発生
  data_quality_threshold: 0.55  # Phase H.21.5: 0.6→0.55 実用的品質基準（Phase H.21修正効果考慮）
  
  # Phase H.5.4: 品質管理強化設定
  quality_management:
    enabled: true
    adaptive_threshold: true      # 適応的品質閾値
    min_threshold: 0.4           # 最小品質（緊急時）
    target_threshold: 0.6        # 目標品質（通常時）  
    max_threshold: 0.8           # 最高品質（理想時）
    
    # 品質ベース取引調整
    low_quality_mode:             # 低品質時（0.4-0.5）
      position_size_reduction: 0.5  # ポジションサイズ50%削減
      confidence_boost: 0.1         # 信頼度閾値10%引き上げ
      stop_loss_tightening: 0.8     # ストップロス20%厳格化
      
    medium_quality_mode:          # 中品質時（0.4-0.55）Phase H.21.6: 範囲調整
      position_size_reduction: 0.8  # ポジションサイズ20%削減（緩和）
      confidence_boost: 0.03        # 信頼度閾値3%引き上げ（緩和）
      stop_loss_tightening: 0.95    # ストップロス5%厳格化（緩和）
    
    high_quality_mode:            # 高品質時（0.55+）Phase H.21.6: 閾値下げ・早期高品質判定
      position_size_reduction: 1.0  # 標準ポジションサイズ
      confidence_boost: 0.0         # 標準信頼度閾値
      stop_loss_tightening: 1.0     # 標準ストップロス

# 本番リスク設定
risk:
  risk_per_trade: 0.005
  stop_atr_mult: 1.2
  kelly_criterion:
    enabled: true
    max_fraction: 0.05

  # Phase H.21.2: ATR期間最適化（100レコード安全活用・リスク管理精度向上）
  atr_period: 20  # 7→20期間・100レコード安全活用・実用的精度向上

live:
  mode: live
  trade_interval: 60
  min_order_size: 0.0001
  max_order_size: 0.0005
  starting_balance: 10000.0  # 実際の残高取得失敗時のフォールバック
  margin_trading:
    enabled: true
    leverage: 1.0
    position_type: "both"
    force_margin_mode: true  # margin_mode=true強制適用
    verify_margin_status: true  # margin状態確認強制
  
  # Bitbank固有設定
  bitbank_settings:
    min_btc_amount: 0.0001
    max_retries: 3
    retry_delay: 5

# 151特徴量フル版ML設定（マルチタイムフレーム対応）
ml:
  feat_period: 14
  lags: [1,2,3]  # Phase H.9.3: [1,2,3,4,5]→[1,2,3]削減・データ消費抑制・効率向上
  rolling_window: 10  # Phase H.9.3: 20→10削減・データ効率向上・即座取引開始対応
  horizon: 5         # 🚨 修正: horizon明示的に設定
  target_type: classification
  model_type: lgbm
  
  # アンサンブル学習設定
  ensemble:
    enabled: true
    method: trading_stacking
    confidence_threshold: 0.60  # Phase H.15: 0.65→0.60（より多くのシグナル通過）
    risk_adjustment: true
    models: ["lgbm", "xgb", "rf"]  # LightGBM, XGBoost, RandomForest
    model_weights: [0.5, 0.3, 0.2]  # 性能ベース重み
    
  # 151特徴量フル版復旧・エラー耐性強化
  extra_features:
    # 基本テクニカル特徴量
    - rsi_14
    - rsi_7
    - rsi_21
    - macd
    - sma_10
    - sma_20
    - sma_50
    - sma_100
    - sma_200
    - ema_10
    - ema_12
    - ema_26
    - ema_50
    - ema_100
    - bb_upper
    - bb_lower
    - bb_percent
    - bb_width
    - atr_7
    - atr_14
    - atr_21
    - volume_sma
    - volume_zscore_14
    - volume_zscore_50
    - momentum_14
    - trend_strength
    # 高度テクニカル指標
    - stoch
    - willr_14
    - adx
    - cmf_20
    - fisher
    # 外部データ特徴量（エラー耐性強化済み）
    - vix
    - dxy
    - fear_greed
    - funding
    # 時間・シグナル特徴量
    - day_of_week
    - hour_of_day
    - price_change_1h
    - price_change_4h
    - price_change_24h
    - volume_change_1h
    - volume_change_24h
    - volatility_1h
    - volatility_24h
    
    
  # 外部データ設定
  external_data:
    enabled: true
    cache_enabled: true
    fallback_enabled: true
  
  # VIX統合パラメータ（Phase H.15: エントリー頻度最適化）
  vix_integration:
    enabled: true
    risk_off_threshold: 25
    panic_threshold: 35
    spike_multiplier: 2.0
    vix_extreme_adj: 0.05  # Phase H.15: 極端な調整を0.15→0.05に抑制
    vix_normal_range: [15, 25]  # 通常範囲定義
  
  # パフォーマンス向上パラメータ（Phase H.15）
  performance_enhancements:
    confidence_filter: 0.60  # Phase H.15: 0.65→0.60（より多くのシグナル通過）
    partial_profit_levels: [0.3, 0.5]
    trailing_stop: true
    
    vix:
      enabled: true
      symbol: "^VIX"
      timeframe: "1d"
      fallback_level: 20.0
      sources: ["yahoo"]  # Phase H.21.3: Yahoo Finance単体・API key不要・安定性重視
      quality_threshold: 0.5  # 0.7→0.5 Yahoo単体での現実的品質閾値
      cache_hours: 24
      
    macro:
      enabled: true
      symbols:
        dxy: "DX-Y.NYB"
        us10y: "^TNX"
        us2y: "^IRX"
      fallback_values:
        dxy: 103.0
        us10y: 4.5
        us2y: 4.8
      sources: ["yahoo"]  # Yahoo Finance統一
      quality_threshold: 0.8
      cache_hours: 6
        
    fear_greed:
      enabled: true
      api_url: "https://api.alternative.me/fng/"
      fallback_index: 50
      sources: ["alternative_me"]  # Phase H.21.3: Alternative.me単体・API key不要・安定性重視
      quality_threshold: 0.4  # 0.5→0.4 単体での現実的品質閾値・変動許容
      cache_hours: 1
      
    funding:
      enabled: true
      symbol: "BTC/USDT"
      exchanges: ["binance"]  # トレンド判定・市況分析用
      fallback_rate: 0.0001
      oi_enabled: true  # Open Interest有効化
      sources: ["binance", "bybit"]  # 取引所優先順位
      quality_threshold: 0.6
      cache_hours: 0.5  # 30分キャッシュ

# 外部データリトライ設定
external_data_retry:
  max_retries: 3
  retry_delay: 2
  exponential_backoff: true
  circuit_breaker:
    enabled: true
    failure_threshold: 5
    recovery_timeout: 300

# 品質監視設定
quality_monitoring:
  enabled: true
  default_threshold: 0.3       # 30%ルール
  emergency_stop_threshold: 0.35 # Phase H.21.4: 0.5→0.35 緊急停止安全マージン確保
  
# バックテスト設定（ライブトレードでの初期設定用）
backtest:
  starting_balance: 10000.0
  slippage_rate: 0.001

# ログ設定
logging:
  level: INFO
  file: /app/logs/bitbank_production.log
  rotation: daily
  retention: 7

# Bitbank手数料最適化設定
bitbank:
  fee_optimization:
    enabled: true
    maker_fee: -0.0002  # -0.02%
    taker_fee: 0.0012   # 0.12%
    prefer_maker: true
    min_profit_after_fees: 0.002  # 0.2%
    
  order_management:
    max_open_orders: 30  # 30件/ペア制限
    rate_limit:
      get_requests: 10   # 10回/秒
      post_requests: 6   # 6回/秒
    queue_enabled: true
    
  day_trading:
    enabled: true
    interest_rate: 0.0004  # 0.04%/日
    auto_close_before_rollover: true
    rollover_time: "00:00:00"

# Phase H.5.1: 出来高重点取引戦略（アメリカ・ヨーロッパ時間対応）
trading_schedule:
  enabled: true
  volume_based_trading: true    # 出来高ベーストレード
  
  # 高出来高時間帯（UTC基準）
  peak_trading_hours: [13, 23]  # UTC 13-23時（アメリカ・ヨーロッパピーク）
  # 日本時間換算: 22:00-08:00（翌日）
  
  # 中出来高時間帯
  moderate_trading_hours: [8, 13] # UTC 8-13時（アジア・ヨーロッパ）
  # 日本時間換算: 17:00-22:00
  
  # 低出来高時間帯（取引控えめ）
  low_volume_hours: [1, 8]      # UTC 1-8時（深夜・早朝）
  # 日本時間換算: 10:00-17:00
  
  weekend_monitoring: false     # 土日も通常取引（24時間フル稼働）
  timezone: "UTC"              # UTC基準で統一管理
  
  # 出来高別取引戦略
  volume_strategies:
    high_volume:      # 高出来高時（アメリカ・ヨーロッパピーク）
      aggressiveness: 1.0     # 積極的取引
      position_size_mult: 1.2 # ポジションサイズ20%増
      stop_loss_mult: 0.8     # ストップロス20%タイト
      
    moderate_volume:  # 中出来高時（アジア・ヨーロッパ）
      aggressiveness: 0.7     # 標準的取引
      position_size_mult: 1.0 # 標準ポジションサイズ
      stop_loss_mult: 1.0     # 標準ストップロス
      
    low_volume:       # 低出来高時（深夜・早朝）
      aggressiveness: 0.3     # 保守的取引
      position_size_mult: 0.5 # ポジションサイズ50%削減
      stop_loss_mult: 1.5     # ストップロス50%緩い
  
  # 取引停止期間（出来高・流動性考慮）
  trading_blackout:
    weekend_full: false        # 土日取引有効化（24時間市場対応）
    extreme_low_volume: true   # 極度低出来高時停止
    major_holidays: true       # 主要祝日停止
  
  # 監視継続設定（土日取引有効化のため無効化）
  monitoring_only_periods: []  # 土日取引有効化・24時間フル稼働

# Phase H.5.2: 出来高ベース動的データ取得最適化
dynamic_data_fetching:
  enabled: true
  
  # 出来高時間帯別since_hours設定
  high_volume_hours: 96         # 高出来高時は96時間（4日分・より多くのデータ）
  moderate_volume_hours: 72     # 中出来高時は72時間（標準）
  low_volume_hours: 48          # 低出来高時は48時間（最小限）
  
  # アメリカ市場重点設定
  us_market_peak_extension: 24  # アメリカピーク時は24時間延長
  europe_market_bonus: 12       # ヨーロッパ時間は12時間延長
  asia_market_reduction: 12     # アジア時間は12時間短縮
  
  # 出来高ベースAPI最適化
  volume_based_batching:
    high_volume_batch: 50       # 高出来高時：大バッチで効率化
    moderate_volume_batch: 30   # 中出来高時：標準バッチ
    low_volume_batch: 10        # 低出来高時：小バッチで負荷軽減
    
  # 流動性考慮調整
  high_liquidity_fast_fetch: true  # 高流動性時は高速取得
  low_liquidity_throttling: true   # 低流動性時はスロットリング
  
  # 土日・祝日対応
  weekend_minimal_fetching: true    # 土日は最小限データ取得
  holiday_reduced_frequency: true   # 祝日は取得頻度削減