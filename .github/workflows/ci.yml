# =============================================================================
# .github/workflows/ci.yml
#   - Push / PR 時に Lint・Format・UnitTest（coverage）を実行
#   - Bybit Testnet 用 E2E テスト（API キーが無ければスキップ）
# =============================================================================
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# ──────────────────────────────────────────────────────────────────────────────
jobs:
# ──────────────────────────────────────────────────────────────────────────────
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    # Codecov トークンを env に流し込み → if でチェック
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    steps:
      #---------------------------------------------------
      - uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      #---------------------------------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements-dev.txt

      # すべての静的チェック & 単体テストをスクリプトに委譲
      - name: Run lint + unit tests + coverage
        run: ./scripts/checks.sh

      # Codecov へアップロード（トークンが設定されている場合のみ）
      - name: Upload coverage to Codecov
        if: ${{ env.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ env.CODECOV_TOKEN }}

# ──────────────────────────────────────────────────────────────────────────────
  integration-tests:
    name: Bybit Testnet E2E
    needs: test
    runs-on: ubuntu-latest
    env:
      BYBIT_TESTNET_API_KEY: ${{ secrets.BYBIT_TESTNET_API_KEY }}
      BYBIT_TESTNET_API_SECRET: ${{ secrets.BYBIT_TESTNET_API_SECRET }}

    steps:
      #---------------------------------------------------
      - uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-integration-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      #---------------------------------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements-dev.txt

      - name: Make run_e2e.sh executable
        run: chmod +x run_e2e.sh

      # API キーが無い場合はスキップ
      - name: Skip if BYBIT_TESTNET_API_KEY/SECRET not set
        run: |
          if [ -z "${BYBIT_TESTNET_API_KEY}" ] || [ -z "${BYBIT_TESTNET_API_SECRET}" ]; then
            echo "Bybit Testnet API Key or Secret not set. Skipping integration tests."
            exit 0
          fi

      #---------------------------------------------------
      - name: Run Bybit E2E
        run: ./run_e2e.sh