# =============================================================================
# .github/workflows/ci.yml
#   - Push / PR 時に Lint・Format・UnitTest（coverage）を実行
#   - Bybit Testnet 用 E2E テスト（API キーが無ければスキップ）
# =============================================================================
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# ──────────────────────────────────────────────────────────────────────────────
jobs:
  # ────────────────────────────────────────────────────────────────────────────
  test:
    name: Unit Tests
    runs-on: ubuntu-latest

    # ここでテストを走らせる Python バージョンを 3.11, 3.12 のみに絞る
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    # Codecov 用のトークンを事前に環境変数へ流し込んでおく
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    steps:
      #───────────────────────────────────────────────────────────────────────────
      - uses: actions/checkout@v4
        # リポジトリをチェックアウト

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
        # pip キャッシュを保存・復元することでインストール高速化

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
        # matrix で指定した Python バージョンをセットアップ

      #───────────────────────────────────────────────────────────────────────────
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements-dev.txt
        # プロジェクト本体と開発用依存をインストール

      - name: Run lint + unit tests + coverage
        run: ./scripts/checks.sh
        # scripts/checks.sh に書かれた flake8/isort/black/pytest＋coverage コマンドを一括実行

      - name: Upload coverage to Codecov
        if: ${{ env.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ env.CODECOV_TOKEN }}
        # CODECOV_TOKEN が設定されていれば coverage を Codecov へアップロード

  # ────────────────────────────────────────────────────────────────────────────
  integration-tests:
    name: Bybit Testnet E2E
    needs: test
    runs-on: ubuntu-latest

    # Bybit Testnet 用のシークレットを環境変数として渡す
    env:
      BYBIT_TESTNET_API_KEY: ${{ secrets.BYBIT_TESTNET_API_KEY }}
      BYBIT_TESTNET_API_SECRET: ${{ secrets.BYBIT_TESTNET_API_SECRET }}

    steps:
      #───────────────────────────────────────────────────────────────────────────
      - uses: actions/checkout@v4
        # もう一度チェックアウト（別ジョブなので必要）

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-integration-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
        # E2E も pip キャッシュを使う

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
        # E2E テストは Python 3.11 環境で実行

      #───────────────────────────────────────────────────────────────────────────
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements-dev.txt
        # E2E 用に同じ依存をインストール

      - name: Make run_e2e.sh executable
        run: chmod +x scripts/run_e2e.sh
        # スクリプトに実行権限を付与

      - name: Skip if BYBIT_TESTNET_API_KEY/SECRET not set
        if: ${{ secrets.BYBIT_TESTNET_API_KEY == '' || secrets.BYBIT_TESTNET_API_SECRET == '' }}
        run: |
          echo "Bybit Testnet API Key or Secret not set. Skipping integration tests."
        # シークレットが空文字列の場合は「正常終了（Skip）」で止める

      - name: Run Bybit E2E
        if: ${{ secrets.BYBIT_TESTNET_API_KEY != '' && secrets.BYBIT_TESTNET_API_SECRET != '' }}
        run: ./scripts/run_e2e.sh
        # 両方のシークレットが設定されている場合のみ E2E スクリプトを実行