# =============================================================================
# ファイル名: .github/workflows/ci.yml
# 説明:
#   - GitHub ActionsによるCIパイプライン
#   - Lint, フォーマット, ユニットテスト（カバレッジ付）、Codecov連携
#   - Python 3.9～3.13のマトリクス
#   - Bybit Testnet E2E（APIキーがあれば自動で実行／run_e2e.sh対応）
#   - Dockerfileでの動作検証はrun_docker.shによりローカル運用・開発者検証推奨
# =============================================================================

name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit-tests:
    name: Unit & Lint (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements-dev.txt

      - name: Lint & Format Checks
        run: |
          flake8 crypto_bot tests
          black --check crypto_bot tests
          isort --check-only crypto_bot tests

      - name: Run unit tests & collect coverage
        run: pytest --maxfail=1 --disable-warnings --cov=crypto_bot --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  integration-tests:
    name: Bybit Testnet E2E
    needs: unit-tests
    if: ${{ secrets.BYBIT_TESTNET_API_KEY && secrets.BYBIT_TESTNET_API_SECRET }}
    runs-on: ubuntu-latest
    env:
      BYBIT_TESTNET_API_KEY: ${{ secrets.BYBIT_TESTNET_API_KEY }}
      BYBIT_TESTNET_API_SECRET: ${{ secrets.BYBIT_TESTNET_API_SECRET }}
    steps:
      - uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-integration-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements-dev.txt

      - name: Make run_e2e.sh executable
        run: chmod +x scripts/run_e2e.sh

      - name: Run Bybit E2E Integration Test
        run: bash scripts/run_e2e.sh