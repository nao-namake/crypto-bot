name: 機能要求
description: 新機能の提案用テンプレート
title: "[FEATURE] "
labels: ["enhancement", "needs-discussion"]
assignees: []

body:
  - type: markdown
    attributes:
      value: |
        新機能の提案をありがとうございます。詳細な情報を提供していただくことで、適切に検討できます。

  - type: textarea
    id: feature-summary
    attributes:
      label: 🚀 機能の概要
      description: 提案する機能を簡潔に説明してください
      placeholder: 例：複数の機械学習モデルを組み合わせたアンサンブル戦略の実装
    validations:
      required: true

  - type: textarea
    id: motivation
    attributes:
      label: 💡 動機・背景
      description: なぜこの機能が必要なのかを説明してください
      placeholder: |
        現在の問題点や改善したい点：
        - 単一モデルでは精度に限界がある
        - 市場状況により性能が不安定
        この機能による解決策：
        - 複数モデルの予測を組み合わせることで精度向上
        - リスク分散により安定性向上
    validations:
      required: true

  - type: dropdown
    id: category
    attributes:
      label: 🏷️ カテゴリ
      description: 機能のカテゴリを選択してください
      options:
        - トレード戦略の改善
        - 機械学習・モデル強化
        - バックテスト・最適化
        - リスク管理
        - データ処理・取得
        - 監視・アラート
        - インフラ・運用
        - UI/UX改善
        - パフォーマンス最適化
        - セキュリティ強化
        - その他
    validations:
      required: true

  - type: dropdown
    id: priority
    attributes:
      label: 📊 優先度
      description: 機能の重要度を選択してください
      options:
        - High (重要な改善、早期実装希望)
        - Medium (有用だが急がない)
        - Low (将来的に検討)
        - Nice to have (余裕があれば)
    validations:
      required: true

  - type: textarea
    id: detailed-description
    attributes:
      label: 📋 詳細仕様
      description: 機能の詳細な動作や仕様を説明してください
      placeholder: |
        具体的な実装内容：
        1. 複数のMLモデル（LightGBM, XGBoost, RandomForest）を並列学習
        2. 各モデルの予測結果を重み付き投票で統合
        3. 動的重み調整機能（過去パフォーマンスベース）
        
        設定項目：
        - ensemble.models: [lgbm, xgb, rf]
        - ensemble.weights: [0.4, 0.3, 0.3]
        - ensemble.dynamic_weights: true
    validations:
      required: true

  - type: textarea
    id: acceptance-criteria
    attributes:
      label: ✅ 受け入れ条件
      description: 機能が完成したと判断する条件を明確に定義してください
      placeholder: |
        - [ ] 設定ファイルで複数モデルを指定可能
        - [ ] 各モデルが並列で学習される
        - [ ] アンサンブル予測が正常に動作する
        - [ ] バックテストで単一モデルより高い性能を示す
        - [ ] ユニットテストが95%以上のカバレッジ
        - [ ] ドキュメントが更新される
    validations:
      required: true

  - type: textarea
    id: technical-considerations
    attributes:
      label: 🔧 技術的考慮事項
      description: 実装時に考慮すべき技術的な点があれば記載してください
      placeholder: |
        - メモリ使用量の増加への対応
        - 学習時間の長期化への対処
        - モデル間の予測値のスケール調整
        - 既存コードとの互換性維持

  - type: textarea
    id: alternatives
    attributes:
      label: 🔄 代替案
      description: 他に検討した実装方法や類似機能があれば記載してください
      placeholder: |
        - スタッキング手法の採用
        - 外部のアンサンブルライブラリ使用
        - 単純平均による統合

  - type: textarea
    id: additional-context
    attributes:
      label: 📎 追加情報
      description: その他、機能実装に役立つ情報があれば記載してください
      placeholder: |
        - 参考論文・記事のURL
        - 類似システムの事例
        - モックアップやワイヤーフレーム
        - 関連するIssueやPR